{
  "type": "object",
  "title": "Variation Set",
  "description": "An unconstrained set of Variation members.",
  "properties": {
    "variation_set": {
      "properties": {
        "_id": {
          "type": "string",
          "pattern": "^\\w[^:]*:.+$",
          "title": "CURIE-style Identifier",
          "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
        },
        "members": {
          "items": {
            "oneOf": [
              {
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^\\w[^:]*:.+$",
                    "title": "CURIE-style Identifier",
                    "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                  },
                  "type": {
                    "type": "string",
                    "const": "Allele",
                    "default": "Allele"
                  },
                  "location": {
                    "oneOf": [
                      {
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "const": "ChromosomeLocation",
                            "default": "ChromosomeLocation"
                          },
                          "species_id": {
                            "type": "string",
                            "pattern": "^\\w[^:]*:.+$",
                            "default": "taxonomy:9606",
                            "title": "Species",
                            "description": "CURIE representing a species from the NCBI species taxonomy (https://registry.identifiers.org/registry/taxonomy)."
                          },
                          "chr": {
                            "type": "string",
                            "description": "The symbolic chromosome name. For humans, chromosome names MUST be one of 1..22, X, Y (case-sensitive).",
                            "title": "Chromosome Name"
                          },
                          "interval": {
                            "properties": {
                              "start": {
                                "type": "string",
                                "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                "description": "Start cytoband region. MUST specify a region nearer the terminal end (telomere) of the chromosome p-arm than `end`."
                              },
                              "end": {
                                "type": "string",
                                "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                "description": "End cytoband region. MUST specify a region nearer the terminal end (telomere) of the chromosome q-arm than `start`."
                              }
                            },
                            "required": [
                              "start",
                              "end"
                            ],
                            "description": "A character string representing cytobands derived from the International System for Human Cytogenomic Nomenclature* (ISCN).",
                            "title": "Cytoband Interval"
                          }
                        },
                        "title": "Chromosome Location"
                      },
                      {
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "const": "SequenceLocation",
                            "default": "SequenceLocation"
                          },
                          "sequence_id": {
                            "type": "string",
                            "pattern": "^\\w[^:]*:\\w[^.]*\\..+$",
                            "description": "A VRS Computed Identifier for the reference Sequence.",
                            "title": "Sequence identifier"
                          },
                          "interval": {
                            "properties": {
                              "start": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "Number",
                                        "default": "Number"
                                      },
                                      "value": {
                                        "type": "number"
                                      }
                                    },
                                    "title": "Start Number"
                                  },
                                  {
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "IndefiniteRange",
                                        "default": "IndefiniteRange"
                                      },
                                      "comparator": {
                                        "enum": [
                                          "<=",
                                          ">="
                                        ],
                                        "type": "string",
                                        "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                      },
                                      "value": {
                                        "type": "number",
                                        "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                      }
                                    },
                                    "title": "Start Indefinite Range"
                                  },
                                  {
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "DefiniteRange",
                                        "default": "DefiniteRange"
                                      },
                                      "min": {
                                        "type": "number",
                                        "description": "The minimum value; inclusive"
                                      },
                                      "max": {
                                        "type": "number",
                                        "description": "The maximum value; inclusive"
                                      }
                                    },
                                    "title": "Start Definite Range"
                                  }
                                ]
                              },
                              "end": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "Number",
                                        "default": "Number"
                                      },
                                      "value": {
                                        "type": "number"
                                      }
                                    },
                                    "title": "End Number"
                                  },
                                  {
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "IndefiniteRange",
                                        "default": "IndefiniteRange"
                                      },
                                      "comparator": {
                                        "enum": [
                                          "<=",
                                          ">="
                                        ],
                                        "type": "string",
                                        "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                      },
                                      "value": {
                                        "type": "number",
                                        "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                      }
                                    },
                                    "title": "End Indefinite Range"
                                  },
                                  {
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "DefiniteRange",
                                        "default": "DefiniteRange"
                                      },
                                      "min": {
                                        "type": "number",
                                        "description": "The minimum value; inclusive"
                                      },
                                      "max": {
                                        "type": "number",
                                        "description": "The maximum value; inclusive"
                                      }
                                    },
                                    "title": "End Definite Range"
                                  }
                                ]
                              }
                            },
                            "title": "Sequence Interval",
                            "description": "Reference sequence region defined by a SequenceInterval."
                          }
                        },
                        "required": [
                          "interval",
                          "type"
                        ],
                        "title": "Sequence Location"
                      }
                    ]
                  },
                  "state": {
                    "oneOf": [
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "LiteralSequenceExpression",
                            "default": "LiteralSequenceExpression"
                          },
                          "sequence": {
                            "type": "string",
                            "pattern": "[ATGCU]+",
                            "description": "An explicit expression of a Sequence"
                          },
                          "count": {
                            "oneOf": [
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "Number",
                                    "default": "Number"
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "The count of repeated units of sequence expression."
                                  }
                                },
                                "title": "Count"
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "IndefiniteRange",
                                    "default": "IndefiniteRange"
                                  },
                                  "comparator": {
                                    "enum": [
                                      "<=",
                                      ">="
                                    ],
                                    "type": "string",
                                    "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                  }
                                },
                                "title": "Indefinite Range Count"
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "DefiniteRange",
                                    "default": "DefiniteRange"
                                  },
                                  "min": {
                                    "type": "number",
                                    "description": "The minimum value; inclusive"
                                  },
                                  "max": {
                                    "type": "number",
                                    "description": "The maximum value; inclusive"
                                  }
                                },
                                "title": "Definite Range Count"
                              }
                            ]
                          }
                        },
                        "title": "Literal Sequence Expression"
                      },
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "DerivedSequenceExpression",
                            "default": "DerivedSequenceExpression"
                          },
                          "reverse_complement": {
                            "type": "boolean"
                          },
                          "location": {
                            "properties": {
                              "_id": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "const": "SequenceLocation",
                                "default": "SequenceLocation"
                              },
                              "sequence_id": {
                                "type": "string",
                                "pattern": "^\\w[^:]*:\\w[^.]*\\..+$",
                                "description": "A VRS Computed Identifier for the reference Sequence.",
                                "title": "Sequence identifier"
                              },
                              "interval": {
                                "properties": {
                                  "start": {
                                    "oneOf": [
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "Number",
                                            "default": "Number"
                                          },
                                          "value": {
                                            "type": "number"
                                          }
                                        },
                                        "title": "Start Number"
                                      },
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "IndefiniteRange",
                                            "default": "IndefiniteRange"
                                          },
                                          "comparator": {
                                            "enum": [
                                              "<=",
                                              ">="
                                            ],
                                            "type": "string",
                                            "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                          },
                                          "value": {
                                            "type": "number",
                                            "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                          }
                                        },
                                        "title": "Start Indefinite Range"
                                      },
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "DefiniteRange",
                                            "default": "DefiniteRange"
                                          },
                                          "min": {
                                            "type": "number",
                                            "description": "The minimum value; inclusive"
                                          },
                                          "max": {
                                            "type": "number",
                                            "description": "The maximum value; inclusive"
                                          }
                                        },
                                        "title": "Start Definite Range"
                                      }
                                    ]
                                  },
                                  "end": {
                                    "oneOf": [
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "Number",
                                            "default": "Number"
                                          },
                                          "value": {
                                            "type": "number"
                                          }
                                        },
                                        "title": "End Number"
                                      },
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "IndefiniteRange",
                                            "default": "IndefiniteRange"
                                          },
                                          "comparator": {
                                            "enum": [
                                              "<=",
                                              ">="
                                            ],
                                            "type": "string",
                                            "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                          },
                                          "value": {
                                            "type": "number",
                                            "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                          }
                                        },
                                        "title": "End Indefinite Range"
                                      },
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "DefiniteRange",
                                            "default": "DefiniteRange"
                                          },
                                          "min": {
                                            "type": "number",
                                            "description": "The minimum value; inclusive"
                                          },
                                          "max": {
                                            "type": "number",
                                            "description": "The maximum value; inclusive"
                                          }
                                        },
                                        "title": "End Definite Range"
                                      }
                                    ]
                                  }
                                },
                                "title": "Sequence Interval",
                                "description": "Reference sequence region defined by a SequenceInterval."
                              }
                            },
                            "required": [
                              "interval"
                            ],
                            "title": "Sequence Location"
                          },
                          "count": {
                            "oneOf": [
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "Number",
                                    "default": "Number"
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "The count of repeated units of sequence expression."
                                  }
                                },
                                "title": "Count"
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "IndefiniteRange",
                                    "default": "IndefiniteRange"
                                  },
                                  "comparator": {
                                    "enum": [
                                      "<=",
                                      ">="
                                    ],
                                    "type": "string",
                                    "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                  }
                                },
                                "title": "Indefinite Range Count"
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "DefiniteRange",
                                    "default": "DefiniteRange"
                                  },
                                  "min": {
                                    "type": "number",
                                    "description": "The minimum value; inclusive"
                                  },
                                  "max": {
                                    "type": "number",
                                    "description": "The maximum value; inclusive"
                                  }
                                },
                                "title": "Definite Range Count"
                              }
                            ]
                          }
                        },
                        "title": "Derived Sequence Expression"
                      }
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "title": "Allele"
              },
              {
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^\\w[^:]*:.+$",
                    "title": "CURIE-style Identifier",
                    "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                  },
                  "type": {
                    "type": "string",
                    "const": "Haplotype",
                    "default": "Haplotype"
                  },
                  "members": {
                    "items": {
                      "oneOf": [
                        {
                          "properties": {
                            "_id": {
                              "type": "string",
                              "pattern": "^\\w[^:]*:.+$",
                              "title": "CURIE-style Identifier",
                              "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                            },
                            "type": {
                              "type": "string",
                              "const": "Allele",
                              "default": "Allele"
                            },
                            "location": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "_id": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "ChromosomeLocation",
                                      "default": "ChromosomeLocation"
                                    },
                                    "species_id": {
                                      "type": "string",
                                      "pattern": "^\\w[^:]*:.+$",
                                      "default": "taxonomy:9606",
                                      "title": "Species",
                                      "description": "CURIE representing a species from the NCBI species taxonomy (https://registry.identifiers.org/registry/taxonomy)."
                                    },
                                    "chr": {
                                      "type": "string",
                                      "description": "The symbolic chromosome name. For humans, chromosome names MUST be one of 1..22, X, Y (case-sensitive).",
                                      "title": "Chromosome Name"
                                    },
                                    "interval": {
                                      "properties": {
                                        "start": {
                                          "type": "string",
                                          "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                          "description": "Start cytoband region. MUST specify a region nearer the terminal end (telomere) of the chromosome p-arm than `end`."
                                        },
                                        "end": {
                                          "type": "string",
                                          "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                          "description": "End cytoband region. MUST specify a region nearer the terminal end (telomere) of the chromosome q-arm than `start`."
                                        }
                                      },
                                      "required": [
                                        "start",
                                        "end"
                                      ],
                                      "description": "A character string representing cytobands derived from the International System for Human Cytogenomic Nomenclature* (ISCN).",
                                      "title": "Cytoband Interval"
                                    }
                                  },
                                  "title": "Chromosome Location"
                                },
                                {
                                  "properties": {
                                    "_id": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "SequenceLocation",
                                      "default": "SequenceLocation"
                                    },
                                    "sequence_id": {
                                      "type": "string",
                                      "pattern": "^\\w[^:]*:\\w[^.]*\\..+$",
                                      "description": "A VRS Computed Identifier for the reference Sequence.",
                                      "title": "Sequence identifier"
                                    },
                                    "interval": {
                                      "properties": {
                                        "start": {
                                          "oneOf": [
                                            {
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "Number",
                                                  "default": "Number"
                                                },
                                                "value": {
                                                  "type": "number"
                                                }
                                              },
                                              "title": "Start Number"
                                            },
                                            {
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "IndefiniteRange",
                                                  "default": "IndefiniteRange"
                                                },
                                                "comparator": {
                                                  "enum": [
                                                    "<=",
                                                    ">="
                                                  ],
                                                  "type": "string",
                                                  "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                                },
                                                "value": {
                                                  "type": "number",
                                                  "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                                }
                                              },
                                              "title": "Start Indefinite Range"
                                            },
                                            {
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "DefiniteRange",
                                                  "default": "DefiniteRange"
                                                },
                                                "min": {
                                                  "type": "number",
                                                  "description": "The minimum value; inclusive"
                                                },
                                                "max": {
                                                  "type": "number",
                                                  "description": "The maximum value; inclusive"
                                                }
                                              },
                                              "title": "Start Definite Range"
                                            }
                                          ]
                                        },
                                        "end": {
                                          "oneOf": [
                                            {
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "Number",
                                                  "default": "Number"
                                                },
                                                "value": {
                                                  "type": "number"
                                                }
                                              },
                                              "title": "End Number"
                                            },
                                            {
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "IndefiniteRange",
                                                  "default": "IndefiniteRange"
                                                },
                                                "comparator": {
                                                  "enum": [
                                                    "<=",
                                                    ">="
                                                  ],
                                                  "type": "string",
                                                  "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                                },
                                                "value": {
                                                  "type": "number",
                                                  "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                                }
                                              },
                                              "title": "End Indefinite Range"
                                            },
                                            {
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "DefiniteRange",
                                                  "default": "DefiniteRange"
                                                },
                                                "min": {
                                                  "type": "number",
                                                  "description": "The minimum value; inclusive"
                                                },
                                                "max": {
                                                  "type": "number",
                                                  "description": "The maximum value; inclusive"
                                                }
                                              },
                                              "title": "End Definite Range"
                                            }
                                          ]
                                        }
                                      },
                                      "title": "Sequence Interval",
                                      "description": "Reference sequence region defined by a SequenceInterval."
                                    }
                                  },
                                  "required": [
                                    "interval",
                                    "type"
                                  ],
                                  "title": "Sequence Location"
                                }
                              ]
                            },
                            "state": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "LiteralSequenceExpression",
                                      "default": "LiteralSequenceExpression"
                                    },
                                    "sequence": {
                                      "type": "string",
                                      "pattern": "[ATGCU]+",
                                      "description": "An explicit expression of a Sequence"
                                    },
                                    "count": {
                                      "oneOf": [
                                        {
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "Number",
                                              "default": "Number"
                                            },
                                            "value": {
                                              "type": "number",
                                              "description": "The count of repeated units of sequence expression."
                                            }
                                          },
                                          "title": "Count"
                                        },
                                        {
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "IndefiniteRange",
                                              "default": "IndefiniteRange"
                                            },
                                            "comparator": {
                                              "enum": [
                                                "<=",
                                                ">="
                                              ],
                                              "type": "string",
                                              "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                            },
                                            "value": {
                                              "type": "number",
                                              "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                            }
                                          },
                                          "title": "Indefinite Range Count"
                                        },
                                        {
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "DefiniteRange",
                                              "default": "DefiniteRange"
                                            },
                                            "min": {
                                              "type": "number",
                                              "description": "The minimum value; inclusive"
                                            },
                                            "max": {
                                              "type": "number",
                                              "description": "The maximum value; inclusive"
                                            }
                                          },
                                          "title": "Definite Range Count"
                                        }
                                      ]
                                    }
                                  },
                                  "title": "Literal Sequence Expression"
                                },
                                {
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "DerivedSequenceExpression",
                                      "default": "DerivedSequenceExpression"
                                    },
                                    "reverse_complement": {
                                      "type": "boolean"
                                    },
                                    "location": {
                                      "properties": {
                                        "_id": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string",
                                          "const": "SequenceLocation",
                                          "default": "SequenceLocation"
                                        },
                                        "sequence_id": {
                                          "type": "string",
                                          "pattern": "^\\w[^:]*:\\w[^.]*\\..+$",
                                          "description": "A VRS Computed Identifier for the reference Sequence.",
                                          "title": "Sequence identifier"
                                        },
                                        "interval": {
                                          "properties": {
                                            "start": {
                                              "oneOf": [
                                                {
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "Number",
                                                      "default": "Number"
                                                    },
                                                    "value": {
                                                      "type": "number"
                                                    }
                                                  },
                                                  "title": "Start Number"
                                                },
                                                {
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "IndefiniteRange",
                                                      "default": "IndefiniteRange"
                                                    },
                                                    "comparator": {
                                                      "enum": [
                                                        "<=",
                                                        ">="
                                                      ],
                                                      "type": "string",
                                                      "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                                    },
                                                    "value": {
                                                      "type": "number",
                                                      "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                                    }
                                                  },
                                                  "title": "Start Indefinite Range"
                                                },
                                                {
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "DefiniteRange",
                                                      "default": "DefiniteRange"
                                                    },
                                                    "min": {
                                                      "type": "number",
                                                      "description": "The minimum value; inclusive"
                                                    },
                                                    "max": {
                                                      "type": "number",
                                                      "description": "The maximum value; inclusive"
                                                    }
                                                  },
                                                  "title": "Start Definite Range"
                                                }
                                              ]
                                            },
                                            "end": {
                                              "oneOf": [
                                                {
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "Number",
                                                      "default": "Number"
                                                    },
                                                    "value": {
                                                      "type": "number"
                                                    }
                                                  },
                                                  "title": "End Number"
                                                },
                                                {
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "IndefiniteRange",
                                                      "default": "IndefiniteRange"
                                                    },
                                                    "comparator": {
                                                      "enum": [
                                                        "<=",
                                                        ">="
                                                      ],
                                                      "type": "string",
                                                      "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                                    },
                                                    "value": {
                                                      "type": "number",
                                                      "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                                    }
                                                  },
                                                  "title": "End Indefinite Range"
                                                },
                                                {
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "DefiniteRange",
                                                      "default": "DefiniteRange"
                                                    },
                                                    "min": {
                                                      "type": "number",
                                                      "description": "The minimum value; inclusive"
                                                    },
                                                    "max": {
                                                      "type": "number",
                                                      "description": "The maximum value; inclusive"
                                                    }
                                                  },
                                                  "title": "End Definite Range"
                                                }
                                              ]
                                            }
                                          },
                                          "title": "Sequence Interval",
                                          "description": "Reference sequence region defined by a SequenceInterval."
                                        }
                                      },
                                      "required": [
                                        "interval"
                                      ],
                                      "title": "Sequence Location"
                                    },
                                    "count": {
                                      "oneOf": [
                                        {
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "Number",
                                              "default": "Number"
                                            },
                                            "value": {
                                              "type": "number",
                                              "description": "The count of repeated units of sequence expression."
                                            }
                                          },
                                          "title": "Count"
                                        },
                                        {
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "IndefiniteRange",
                                              "default": "IndefiniteRange"
                                            },
                                            "comparator": {
                                              "enum": [
                                                "<=",
                                                ">="
                                              ],
                                              "type": "string",
                                              "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                            },
                                            "value": {
                                              "type": "number",
                                              "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                            }
                                          },
                                          "title": "Indefinite Range Count"
                                        },
                                        {
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "DefiniteRange",
                                              "default": "DefiniteRange"
                                            },
                                            "min": {
                                              "type": "number",
                                              "description": "The minimum value; inclusive"
                                            },
                                            "max": {
                                              "type": "number",
                                              "description": "The maximum value; inclusive"
                                            }
                                          },
                                          "title": "Definite Range Count"
                                        }
                                      ]
                                    }
                                  },
                                  "title": "Derived Sequence Expression"
                                }
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Allele"
                        },
                        {
                          "properties": {
                            "curie": {
                              "type": "string",
                              "pattern": "^\\w[^:]*:.+$",
                              "description": "References to Alleles that comprise this Haplotype."
                            }
                          },
                          "title": "Reference"
                        }
                      ]
                    },
                    "type": "array",
                    "title": "Alleles (a set of non-overlapping Alleles that co-occur on the same molecule)"
                  }
                },
                "required": [
                  "type"
                ],
                "title": "Haplotype",
                "description": "List of Alleles, or references to Alleles, that comprise this Haplotype."
              },
              {
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^\\w[^:]*:.+$",
                    "title": "CURIE-style Identifier",
                    "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                  },
                  "type": {
                    "type": "string",
                    "const": "CopyNumber",
                    "default": "CopyNumber"
                  },
                  "copies": {
                    "oneOf": [
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "Number",
                            "default": "Number"
                          },
                          "value": {
                            "type": "number"
                          }
                        },
                        "title": "Integral Number of Copies"
                      },
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "IndefiniteRange",
                            "default": "IndefiniteRange"
                          },
                          "comparator": {
                            "enum": [
                              "<=",
                              ">="
                            ],
                            "type": "string",
                            "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                          },
                          "value": {
                            "type": "number",
                            "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                          }
                        },
                        "title": "Indefinite Range of Copies"
                      },
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "DefiniteRange",
                            "default": "DefiniteRange"
                          },
                          "min": {
                            "type": "number",
                            "description": "The minimum value; inclusive"
                          },
                          "max": {
                            "type": "number",
                            "description": "The maximum value; inclusive"
                          }
                        },
                        "title": "Definite Range of Copies"
                      }
                    ]
                  },
                  "subject": {
                    "oneOf": [
                      {
                        "properties": {
                          "_id": {
                            "type": "string",
                            "pattern": "^\\w[^:]*:.+$",
                            "title": "CURIE-style Identifier",
                            "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                          },
                          "type": {
                            "type": "string",
                            "const": "Allele",
                            "default": "Allele"
                          },
                          "location": {
                            "oneOf": [
                              {
                                "properties": {
                                  "_id": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "const": "ChromosomeLocation",
                                    "default": "ChromosomeLocation"
                                  },
                                  "species_id": {
                                    "type": "string",
                                    "pattern": "^\\w[^:]*:.+$",
                                    "default": "taxonomy:9606",
                                    "title": "Species",
                                    "description": "CURIE representing a species from the NCBI species taxonomy (https://registry.identifiers.org/registry/taxonomy)."
                                  },
                                  "chr": {
                                    "type": "string",
                                    "description": "The symbolic chromosome name. For humans, chromosome names MUST be one of 1..22, X, Y (case-sensitive).",
                                    "title": "Chromosome Name"
                                  },
                                  "interval": {
                                    "properties": {
                                      "start": {
                                        "type": "string",
                                        "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                        "description": "Start cytoband region. MUST specify a region nearer the terminal end (telomere) of the chromosome p-arm than `end`."
                                      },
                                      "end": {
                                        "type": "string",
                                        "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                        "description": "End cytoband region. MUST specify a region nearer the terminal end (telomere) of the chromosome q-arm than `start`."
                                      }
                                    },
                                    "required": [
                                      "start",
                                      "end"
                                    ],
                                    "description": "A character string representing cytobands derived from the International System for Human Cytogenomic Nomenclature* (ISCN).",
                                    "title": "Cytoband Interval"
                                  }
                                },
                                "title": "Chromosome Location"
                              },
                              {
                                "properties": {
                                  "_id": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "const": "SequenceLocation",
                                    "default": "SequenceLocation"
                                  },
                                  "sequence_id": {
                                    "type": "string",
                                    "pattern": "^\\w[^:]*:\\w[^.]*\\..+$",
                                    "description": "A VRS Computed Identifier for the reference Sequence.",
                                    "title": "Sequence identifier"
                                  },
                                  "interval": {
                                    "properties": {
                                      "start": {
                                        "oneOf": [
                                          {
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "Number",
                                                "default": "Number"
                                              },
                                              "value": {
                                                "type": "number"
                                              }
                                            },
                                            "title": "Start Number"
                                          },
                                          {
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "IndefiniteRange",
                                                "default": "IndefiniteRange"
                                              },
                                              "comparator": {
                                                "enum": [
                                                  "<=",
                                                  ">="
                                                ],
                                                "type": "string",
                                                "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                              },
                                              "value": {
                                                "type": "number",
                                                "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                              }
                                            },
                                            "title": "Start Indefinite Range"
                                          },
                                          {
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "DefiniteRange",
                                                "default": "DefiniteRange"
                                              },
                                              "min": {
                                                "type": "number",
                                                "description": "The minimum value; inclusive"
                                              },
                                              "max": {
                                                "type": "number",
                                                "description": "The maximum value; inclusive"
                                              }
                                            },
                                            "title": "Start Definite Range"
                                          }
                                        ]
                                      },
                                      "end": {
                                        "oneOf": [
                                          {
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "Number",
                                                "default": "Number"
                                              },
                                              "value": {
                                                "type": "number"
                                              }
                                            },
                                            "title": "End Number"
                                          },
                                          {
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "IndefiniteRange",
                                                "default": "IndefiniteRange"
                                              },
                                              "comparator": {
                                                "enum": [
                                                  "<=",
                                                  ">="
                                                ],
                                                "type": "string",
                                                "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                              },
                                              "value": {
                                                "type": "number",
                                                "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                              }
                                            },
                                            "title": "End Indefinite Range"
                                          },
                                          {
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "DefiniteRange",
                                                "default": "DefiniteRange"
                                              },
                                              "min": {
                                                "type": "number",
                                                "description": "The minimum value; inclusive"
                                              },
                                              "max": {
                                                "type": "number",
                                                "description": "The maximum value; inclusive"
                                              }
                                            },
                                            "title": "End Definite Range"
                                          }
                                        ]
                                      }
                                    },
                                    "title": "Sequence Interval",
                                    "description": "Reference sequence region defined by a SequenceInterval."
                                  }
                                },
                                "required": [
                                  "interval",
                                  "type"
                                ],
                                "title": "Sequence Location"
                              }
                            ]
                          },
                          "state": {
                            "oneOf": [
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "LiteralSequenceExpression",
                                    "default": "LiteralSequenceExpression"
                                  },
                                  "sequence": {
                                    "type": "string",
                                    "pattern": "[ATGCU]+",
                                    "description": "An explicit expression of a Sequence"
                                  },
                                  "count": {
                                    "oneOf": [
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "Number",
                                            "default": "Number"
                                          },
                                          "value": {
                                            "type": "number",
                                            "description": "The count of repeated units of sequence expression."
                                          }
                                        },
                                        "title": "Count"
                                      },
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "IndefiniteRange",
                                            "default": "IndefiniteRange"
                                          },
                                          "comparator": {
                                            "enum": [
                                              "<=",
                                              ">="
                                            ],
                                            "type": "string",
                                            "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                          },
                                          "value": {
                                            "type": "number",
                                            "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                          }
                                        },
                                        "title": "Indefinite Range Count"
                                      },
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "DefiniteRange",
                                            "default": "DefiniteRange"
                                          },
                                          "min": {
                                            "type": "number",
                                            "description": "The minimum value; inclusive"
                                          },
                                          "max": {
                                            "type": "number",
                                            "description": "The maximum value; inclusive"
                                          }
                                        },
                                        "title": "Definite Range Count"
                                      }
                                    ]
                                  }
                                },
                                "title": "Literal Sequence Expression"
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "DerivedSequenceExpression",
                                    "default": "DerivedSequenceExpression"
                                  },
                                  "reverse_complement": {
                                    "type": "boolean"
                                  },
                                  "location": {
                                    "properties": {
                                      "_id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "const": "SequenceLocation",
                                        "default": "SequenceLocation"
                                      },
                                      "sequence_id": {
                                        "type": "string",
                                        "pattern": "^\\w[^:]*:\\w[^.]*\\..+$",
                                        "description": "A VRS Computed Identifier for the reference Sequence.",
                                        "title": "Sequence identifier"
                                      },
                                      "interval": {
                                        "properties": {
                                          "start": {
                                            "oneOf": [
                                              {
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "Number",
                                                    "default": "Number"
                                                  },
                                                  "value": {
                                                    "type": "number"
                                                  }
                                                },
                                                "title": "Start Number"
                                              },
                                              {
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "IndefiniteRange",
                                                    "default": "IndefiniteRange"
                                                  },
                                                  "comparator": {
                                                    "enum": [
                                                      "<=",
                                                      ">="
                                                    ],
                                                    "type": "string",
                                                    "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                                  },
                                                  "value": {
                                                    "type": "number",
                                                    "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                                  }
                                                },
                                                "title": "Start Indefinite Range"
                                              },
                                              {
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "DefiniteRange",
                                                    "default": "DefiniteRange"
                                                  },
                                                  "min": {
                                                    "type": "number",
                                                    "description": "The minimum value; inclusive"
                                                  },
                                                  "max": {
                                                    "type": "number",
                                                    "description": "The maximum value; inclusive"
                                                  }
                                                },
                                                "title": "Start Definite Range"
                                              }
                                            ]
                                          },
                                          "end": {
                                            "oneOf": [
                                              {
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "Number",
                                                    "default": "Number"
                                                  },
                                                  "value": {
                                                    "type": "number"
                                                  }
                                                },
                                                "title": "End Number"
                                              },
                                              {
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "IndefiniteRange",
                                                    "default": "IndefiniteRange"
                                                  },
                                                  "comparator": {
                                                    "enum": [
                                                      "<=",
                                                      ">="
                                                    ],
                                                    "type": "string",
                                                    "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                                  },
                                                  "value": {
                                                    "type": "number",
                                                    "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                                  }
                                                },
                                                "title": "End Indefinite Range"
                                              },
                                              {
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "DefiniteRange",
                                                    "default": "DefiniteRange"
                                                  },
                                                  "min": {
                                                    "type": "number",
                                                    "description": "The minimum value; inclusive"
                                                  },
                                                  "max": {
                                                    "type": "number",
                                                    "description": "The maximum value; inclusive"
                                                  }
                                                },
                                                "title": "End Definite Range"
                                              }
                                            ]
                                          }
                                        },
                                        "title": "Sequence Interval",
                                        "description": "Reference sequence region defined by a SequenceInterval."
                                      }
                                    },
                                    "required": [
                                      "interval"
                                    ],
                                    "title": "Sequence Location"
                                  },
                                  "count": {
                                    "oneOf": [
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "Number",
                                            "default": "Number"
                                          },
                                          "value": {
                                            "type": "number",
                                            "description": "The count of repeated units of sequence expression."
                                          }
                                        },
                                        "title": "Count"
                                      },
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "IndefiniteRange",
                                            "default": "IndefiniteRange"
                                          },
                                          "comparator": {
                                            "enum": [
                                              "<=",
                                              ">="
                                            ],
                                            "type": "string",
                                            "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                          },
                                          "value": {
                                            "type": "number",
                                            "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                          }
                                        },
                                        "title": "Indefinite Range Count"
                                      },
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "DefiniteRange",
                                            "default": "DefiniteRange"
                                          },
                                          "min": {
                                            "type": "number",
                                            "description": "The minimum value; inclusive"
                                          },
                                          "max": {
                                            "type": "number",
                                            "description": "The maximum value; inclusive"
                                          }
                                        },
                                        "title": "Definite Range Count"
                                      }
                                    ]
                                  }
                                },
                                "title": "Derived Sequence Expression"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "title": "Allele"
                      },
                      {
                        "properties": {
                          "_id": {
                            "type": "string",
                            "pattern": "^\\w[^:]*:.+$",
                            "title": "CURIE-style Identifier",
                            "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                          },
                          "type": {
                            "type": "string",
                            "const": "Haplotype",
                            "default": "Haplotype"
                          },
                          "members": {
                            "items": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "_id": {
                                      "type": "string",
                                      "pattern": "^\\w[^:]*:.+$",
                                      "title": "CURIE-style Identifier",
                                      "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                                    },
                                    "type": {
                                      "type": "string",
                                      "const": "Allele",
                                      "default": "Allele"
                                    },
                                    "location": {
                                      "oneOf": [
                                        {
                                          "properties": {
                                            "_id": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "const": "ChromosomeLocation",
                                              "default": "ChromosomeLocation"
                                            },
                                            "species_id": {
                                              "type": "string",
                                              "pattern": "^\\w[^:]*:.+$",
                                              "default": "taxonomy:9606",
                                              "title": "Species",
                                              "description": "CURIE representing a species from the NCBI species taxonomy (https://registry.identifiers.org/registry/taxonomy)."
                                            },
                                            "chr": {
                                              "type": "string",
                                              "description": "The symbolic chromosome name. For humans, chromosome names MUST be one of 1..22, X, Y (case-sensitive).",
                                              "title": "Chromosome Name"
                                            },
                                            "interval": {
                                              "properties": {
                                                "start": {
                                                  "type": "string",
                                                  "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                                  "description": "Start cytoband region. MUST specify a region nearer the terminal end (telomere) of the chromosome p-arm than `end`."
                                                },
                                                "end": {
                                                  "type": "string",
                                                  "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                                  "description": "End cytoband region. MUST specify a region nearer the terminal end (telomere) of the chromosome q-arm than `start`."
                                                }
                                              },
                                              "required": [
                                                "start",
                                                "end"
                                              ],
                                              "description": "A character string representing cytobands derived from the International System for Human Cytogenomic Nomenclature* (ISCN).",
                                              "title": "Cytoband Interval"
                                            }
                                          },
                                          "title": "Chromosome Location"
                                        },
                                        {
                                          "properties": {
                                            "_id": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "const": "SequenceLocation",
                                              "default": "SequenceLocation"
                                            },
                                            "sequence_id": {
                                              "type": "string",
                                              "pattern": "^\\w[^:]*:\\w[^.]*\\..+$",
                                              "description": "A VRS Computed Identifier for the reference Sequence.",
                                              "title": "Sequence identifier"
                                            },
                                            "interval": {
                                              "properties": {
                                                "start": {
                                                  "oneOf": [
                                                    {
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "Number",
                                                          "default": "Number"
                                                        },
                                                        "value": {
                                                          "type": "number"
                                                        }
                                                      },
                                                      "title": "Start Number"
                                                    },
                                                    {
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "IndefiniteRange",
                                                          "default": "IndefiniteRange"
                                                        },
                                                        "comparator": {
                                                          "enum": [
                                                            "<=",
                                                            ">="
                                                          ],
                                                          "type": "string",
                                                          "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                                        },
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                                        }
                                                      },
                                                      "title": "Start Indefinite Range"
                                                    },
                                                    {
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "DefiniteRange",
                                                          "default": "DefiniteRange"
                                                        },
                                                        "min": {
                                                          "type": "number",
                                                          "description": "The minimum value; inclusive"
                                                        },
                                                        "max": {
                                                          "type": "number",
                                                          "description": "The maximum value; inclusive"
                                                        }
                                                      },
                                                      "title": "Start Definite Range"
                                                    }
                                                  ]
                                                },
                                                "end": {
                                                  "oneOf": [
                                                    {
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "Number",
                                                          "default": "Number"
                                                        },
                                                        "value": {
                                                          "type": "number"
                                                        }
                                                      },
                                                      "title": "End Number"
                                                    },
                                                    {
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "IndefiniteRange",
                                                          "default": "IndefiniteRange"
                                                        },
                                                        "comparator": {
                                                          "enum": [
                                                            "<=",
                                                            ">="
                                                          ],
                                                          "type": "string",
                                                          "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                                        },
                                                        "value": {
                                                          "type": "number",
                                                          "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                                        }
                                                      },
                                                      "title": "End Indefinite Range"
                                                    },
                                                    {
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "DefiniteRange",
                                                          "default": "DefiniteRange"
                                                        },
                                                        "min": {
                                                          "type": "number",
                                                          "description": "The minimum value; inclusive"
                                                        },
                                                        "max": {
                                                          "type": "number",
                                                          "description": "The maximum value; inclusive"
                                                        }
                                                      },
                                                      "title": "End Definite Range"
                                                    }
                                                  ]
                                                }
                                              },
                                              "title": "Sequence Interval",
                                              "description": "Reference sequence region defined by a SequenceInterval."
                                            }
                                          },
                                          "required": [
                                            "interval",
                                            "type"
                                          ],
                                          "title": "Sequence Location"
                                        }
                                      ]
                                    },
                                    "state": {
                                      "oneOf": [
                                        {
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "LiteralSequenceExpression",
                                              "default": "LiteralSequenceExpression"
                                            },
                                            "sequence": {
                                              "type": "string",
                                              "pattern": "[ATGCU]+",
                                              "description": "An explicit expression of a Sequence"
                                            },
                                            "count": {
                                              "oneOf": [
                                                {
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "Number",
                                                      "default": "Number"
                                                    },
                                                    "value": {
                                                      "type": "number",
                                                      "description": "The count of repeated units of sequence expression."
                                                    }
                                                  },
                                                  "title": "Count"
                                                },
                                                {
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "IndefiniteRange",
                                                      "default": "IndefiniteRange"
                                                    },
                                                    "comparator": {
                                                      "enum": [
                                                        "<=",
                                                        ">="
                                                      ],
                                                      "type": "string",
                                                      "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                                    },
                                                    "value": {
                                                      "type": "number",
                                                      "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                                    }
                                                  },
                                                  "title": "Indefinite Range Count"
                                                },
                                                {
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "DefiniteRange",
                                                      "default": "DefiniteRange"
                                                    },
                                                    "min": {
                                                      "type": "number",
                                                      "description": "The minimum value; inclusive"
                                                    },
                                                    "max": {
                                                      "type": "number",
                                                      "description": "The maximum value; inclusive"
                                                    }
                                                  },
                                                  "title": "Definite Range Count"
                                                }
                                              ]
                                            }
                                          },
                                          "title": "Literal Sequence Expression"
                                        },
                                        {
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "DerivedSequenceExpression",
                                              "default": "DerivedSequenceExpression"
                                            },
                                            "reverse_complement": {
                                              "type": "boolean"
                                            },
                                            "location": {
                                              "properties": {
                                                "_id": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "const": "SequenceLocation",
                                                  "default": "SequenceLocation"
                                                },
                                                "sequence_id": {
                                                  "type": "string",
                                                  "pattern": "^\\w[^:]*:\\w[^.]*\\..+$",
                                                  "description": "A VRS Computed Identifier for the reference Sequence.",
                                                  "title": "Sequence identifier"
                                                },
                                                "interval": {
                                                  "properties": {
                                                    "start": {
                                                      "oneOf": [
                                                        {
                                                          "properties": {
                                                            "type": {
                                                              "type": "string",
                                                              "const": "Number",
                                                              "default": "Number"
                                                            },
                                                            "value": {
                                                              "type": "number"
                                                            }
                                                          },
                                                          "title": "Start Number"
                                                        },
                                                        {
                                                          "properties": {
                                                            "type": {
                                                              "type": "string",
                                                              "const": "IndefiniteRange",
                                                              "default": "IndefiniteRange"
                                                            },
                                                            "comparator": {
                                                              "enum": [
                                                                "<=",
                                                                ">="
                                                              ],
                                                              "type": "string",
                                                              "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                                            },
                                                            "value": {
                                                              "type": "number",
                                                              "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                                            }
                                                          },
                                                          "title": "Start Indefinite Range"
                                                        },
                                                        {
                                                          "properties": {
                                                            "type": {
                                                              "type": "string",
                                                              "const": "DefiniteRange",
                                                              "default": "DefiniteRange"
                                                            },
                                                            "min": {
                                                              "type": "number",
                                                              "description": "The minimum value; inclusive"
                                                            },
                                                            "max": {
                                                              "type": "number",
                                                              "description": "The maximum value; inclusive"
                                                            }
                                                          },
                                                          "title": "Start Definite Range"
                                                        }
                                                      ]
                                                    },
                                                    "end": {
                                                      "oneOf": [
                                                        {
                                                          "properties": {
                                                            "type": {
                                                              "type": "string",
                                                              "const": "Number",
                                                              "default": "Number"
                                                            },
                                                            "value": {
                                                              "type": "number"
                                                            }
                                                          },
                                                          "title": "End Number"
                                                        },
                                                        {
                                                          "properties": {
                                                            "type": {
                                                              "type": "string",
                                                              "const": "IndefiniteRange",
                                                              "default": "IndefiniteRange"
                                                            },
                                                            "comparator": {
                                                              "enum": [
                                                                "<=",
                                                                ">="
                                                              ],
                                                              "type": "string",
                                                              "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                                            },
                                                            "value": {
                                                              "type": "number",
                                                              "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                                            }
                                                          },
                                                          "title": "End Indefinite Range"
                                                        },
                                                        {
                                                          "properties": {
                                                            "type": {
                                                              "type": "string",
                                                              "const": "DefiniteRange",
                                                              "default": "DefiniteRange"
                                                            },
                                                            "min": {
                                                              "type": "number",
                                                              "description": "The minimum value; inclusive"
                                                            },
                                                            "max": {
                                                              "type": "number",
                                                              "description": "The maximum value; inclusive"
                                                            }
                                                          },
                                                          "title": "End Definite Range"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "title": "Sequence Interval",
                                                  "description": "Reference sequence region defined by a SequenceInterval."
                                                }
                                              },
                                              "required": [
                                                "interval"
                                              ],
                                              "title": "Sequence Location"
                                            },
                                            "count": {
                                              "oneOf": [
                                                {
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "Number",
                                                      "default": "Number"
                                                    },
                                                    "value": {
                                                      "type": "number",
                                                      "description": "The count of repeated units of sequence expression."
                                                    }
                                                  },
                                                  "title": "Count"
                                                },
                                                {
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "IndefiniteRange",
                                                      "default": "IndefiniteRange"
                                                    },
                                                    "comparator": {
                                                      "enum": [
                                                        "<=",
                                                        ">="
                                                      ],
                                                      "type": "string",
                                                      "description": "One of \"<=\" or \">=\", indicating which direction the range is indefinite."
                                                    },
                                                    "value": {
                                                      "type": "number",
                                                      "description": "A half-bounded range of numbers represented as a bounded value and associated comparator. The bound operator is interpreted as follows: ''>='' are all numbers greater than and including `value`, ''<='' are all numbers less than and including `value`."
                                                    }
                                                  },
                                                  "title": "Indefinite Range Count"
                                                },
                                                {
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "const": "DefiniteRange",
                                                      "default": "DefiniteRange"
                                                    },
                                                    "min": {
                                                      "type": "number",
                                                      "description": "The minimum value; inclusive"
                                                    },
                                                    "max": {
                                                      "type": "number",
                                                      "description": "The maximum value; inclusive"
                                                    }
                                                  },
                                                  "title": "Definite Range Count"
                                                }
                                              ]
                                            }
                                          },
                                          "title": "Derived Sequence Expression"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Allele"
                                },
                                {
                                  "properties": {
                                    "curie": {
                                      "type": "string",
                                      "pattern": "^\\w[^:]*:.+$",
                                      "description": "References to Alleles that comprise this Haplotype."
                                    }
                                  },
                                  "title": "Reference"
                                }
                              ]
                            },
                            "type": "array",
                            "title": "Alleles (a set of non-overlapping Alleles that co-occur on the same molecule)"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "title": "Haplotype",
                        "description": "List of Alleles, or references to Alleles, that comprise this Haplotype."
                      },
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "Gene",
                            "default": "Gene"
                          },
                          "gene_id": {
                            "type": "string",
                            "pattern": "^\\w[^:]*:.+$",
                            "title": "Gene ID",
                            "description": "A CURIE reference to a Gene as defined by an authority (https://registry.identifiers.org/registry/hgnc)"
                          }
                        },
                        "title": "Gene"
                      }
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "title": "Copy Number"
              }
            ]
          },
          "type": "array",
          "title": "Variation"
        }
      },
      "title": "Variation Set"
    }
  }
}