{
  "title": "Phenopacket",
  "description": "An anonymous phenotypic description of an individual or biosample with potential genes of interest and/or diagnoses. This is a bundle of high-level concepts with no specifically defined relational concepts. It is expected that the resources sharing the phenopackets will define and enforce their own semantics and level of requirements for included fields.",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "description": "An identifier specific for this phenopacket."
    },
    "subject": {
      "$ref": "#/definitions/Individual",
      "additionalProperties": false,
      "description": "The individual representing the focus of this packet - e.g. the proband in rare disease cases or cancer patient"
    },
    "meta_data": {
      "$ref": "#/definitions/MetaData",
      "additionalProperties": false,
      "description": "Structured definitions of the resources and ontologies used within the phenopacket. REQUIRED"
    },
    "files": {
      "$ref": "#/definitions/Files"
    },
    "diseases": {
      "$ref": "#/definitions/Disease"
    },
    "interpretations": {
      "$ref": "#/definitions/Interpretation"
    },
    "medical_actions": {
      "$ref": "#/definitions/MedicalAction"
    },
    "phenotypic_features": {
      "$ref": "#/definitions/PhenotypicFeatures"
    },
    "measurements": {
      "$ref": "#/definitions/Measurement"
    },
    "biosamples": {
      "$ref": "#/definitions/Biosample"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "Individual": {
      "properties": {
        "id": {
          "type": "string",
          "description": "An identifier for the individual. This must be unique within the record. ARGO mapping donor::submitter_donor_id"
        },
        "alternate_ids": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "title": "Alternative Identifiers for this Individual",
          "description": "An optional list of alternative identifiers for this individual. This field is provided for the convenience of users who may have multiple mappings to an individual which they need to track."
        },
        "date_of_birth": {
          "type": "string",
          "description": "The date of birth of the individual as an ISO8601 UTC timestamp - rounded down to the closest known year/month/day/hour/minute (e.g., \"2018-03-01T00:00:00Z\" for someone born on an unknown day in March 2018 or \"2018-01-01T00:00:00Z\" for someone born on an unknown day in 2018 or empty if unknown/ not stated).",
          "format": "date-time"
        },
        "time_at_last_encounter": {
          "oneOf": [
            {
              "properties": {
                "gestational_age": {
                  "properties": {
                    "weeks": {
                      "type": "integer"
                    },
                    "days": {
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "Gestational Age"
                }
              },
              "title": "Gestational Age"
            },
            {
              "properties": {
                "age": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "Age",
                  "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
                }
              },
              "title": "Age"
            },
            {
              "properties": {
                "age_range": {
                  "properties": {
                    "start": {
                      "properties": {
                        "iso8601duration": {
                          "type": "string",
                          "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                        }
                      }
                    },
                    "end": {
                      "properties": {
                        "iso8601duration": {
                          "type": "string",
                          "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                        }
                      }
                    }
                  }
                }
              },
              "title": "Age Range"
            },
            {
              "properties": {
                "timestamp": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "title": "Timestamp"
            },
            {
              "properties": {
                "interval": {
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "Time Interval"
                }
              },
              "title": "Time Interval"
            }
          ],
          "description": "A TimeElement object describing the age of the individual at the last time of collection. The Age object allows the encoding of the age either as an ISO8601 duration or time interval (preferred), or as an ontology term object. See http://build.fhir.org/datatypes."
        },
        "vital_status": {
          "properties": {
            "status": {
              "enum": [
                "UNKNOWN_STATUS",
                "ALIVE",
                "DECEASED"
              ],
              "type": "string",
              "title": "Status",
              "description": "Default = ALIVE (i.e., the individual is alive)."
            },
            "time_of_death": {
              "oneOf": [
                {
                  "properties": {
                    "gestational_age": {
                      "properties": {
                        "weeks": {
                          "type": "integer"
                        },
                        "days": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "title": "Gestational Age"
                    }
                  },
                  "title": "Gestational Age"
                },
                {
                  "properties": {
                    "age": {
                      "properties": {
                        "iso8601duration": {
                          "type": "string",
                          "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "title": "Age",
                      "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
                    }
                  },
                  "title": "Age"
                },
                {
                  "properties": {
                    "age_range": {
                      "properties": {
                        "start": {
                          "properties": {
                            "iso8601duration": {
                              "type": "string",
                              "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                            }
                          }
                        },
                        "end": {
                          "properties": {
                            "iso8601duration": {
                              "type": "string",
                              "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Age Range"
                },
                {
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "title": "Timestamp"
                },
                {
                  "properties": {
                    "interval": {
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "end": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "title": "Time Interval"
                    }
                  },
                  "title": "Time Interval"
                }
              ],
              "description": "A TimeElement object describing the age of the individual at the last time of collection. The Age object allows the encoding of the age either as an ISO8601 duration or time interval (preferred), or as an ontology term object. See http://build.fhir.org/datatypes."
            },
            "cause_of_death": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                }
              },
              "description": "ARGO mapping donor::cause_of_death",
              "title": "Cause of Death"
            },
            "survival_time_in_days": {
              "type": "integer",
              "description": "ARGO mapping donor::survival_time"
            }
          },
          "type": "object",
          "title": "Vital Status",
          "description": "Vital status of the individual. If not present, it is assumed that the individual is alive. If present, it will default to 'false' (i.e., the individual was alive when the data was collected). ARGO mapping donor::vital_status"
        },
        "sex": {
          "enum": [
            "UNKNOWN_SEX",
            "FEMALE",
            "MALE",
            "OTHER_SEX"
          ],
          "type": "string",
          "title": "Sex",
          "description": "Sex of an individual. FHIR mapping: AdministrativeGender (https://www.hl7.org/fhir/codesystem-administrative-gender.html)"
        },
        "karyotypic_sex": {
          "enum": [
            "UNKNOWN_KARYOTYPE",
            "XX",
            "XY",
            "XO",
            "XXY",
            "XXX",
            "XXYY",
            "XXXY",
            "XXXX",
            "XYY",
            "OTHER_KARYOTYPE"
          ],
          "type": "string",
          "title": "Karyotypic Sex",
          "description": "Karyotypic sex of the individual"
        },
        "gender": {
          "properties": {
            "id": {
              "type": "string"
            },
            "label": {
              "type": "string"
            }
          }
        },
        "taxonomy": {
          "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false,
      "type": "object",
      "title": "Individual",
      "description": "An individual (or subject) typically corresponds to an individual human or another organism. FHIR mapping: Patient (https://www.hl7.org/fhir/patient.html)."
    },
    "MetaData": {
      "properties": {
        "submitted_by": {
          "type": "string"
        },
        "external_references": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "reference": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          }
        },
        "resources": {
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "namespace_prefix": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "iri_prefix": {
              "type": "string"
            }
          }
        },
        "updates": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "timestamp": {
                "type": "string",
                "format": "date"
              },
              "updated_by": {
                "type": "string"
              },
              "comment": {
                "type": "string"
              }
            }
          }
        },
        "phenopacket_schema_version": {
          "type": "string",
          "oneOf": [
            {
              "const": "1.0",
              "title": "1.0"
            },
            {
              "const": "1.0.0",
              "title": "1.0.0"
            },
            {
              "const": "2.0",
              "title": "2.0"
            }
          ]
        },
        "created": {
          "type": "string",
          "format": "date"
        },
        "created_by": {
          "type": "string"
        }
      },
      "required": [
        "created",
        "created_by",
        "submitted_by"
      ],
      "additionalProperties": false,
      "type": "object",
      "title": "Meta Data"
    },
    "Files": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "URI for the file e.g. https://opensnp.org/data/60.23andme-exome-vcf.231?1341012444 or drs://seqslab.net/id",
          "title": "URI"
        },
        "individual_to_file_identifiers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "title": "Individual",
                "description": "The values must correspond to the Individual::ID for the individuals in the message."
              },
              "value": {
                "type": "string",
                "title": "File identifier",
                "description": "The values must map to the samples in the file."
              }
            },
            "required": [
              "key",
              "value"
            ]
          },
          "description": "Map of identifiers mapping an individual to a sample in the file. The key values must correspond to the Individual::id for the individuals in the message, the values must map to the samples in the file."
        },
        "file_attribute": {
          "type": "array",
          "description": "A map of attributes pertaining to the file or its contents.",
          "items": {
            "type": "object",
            "properties": {
              "genomeAssembly": {
                "type": "string"
              },
              "fileFormat": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Disease": {
      "properties": {
        "term": {
          "properties": {
            "id": {
              "type": "string"
            },
            "label": {
              "type": "string"
            }
          },
          "description": "An ontology class that represents the disease. REQUIRED."
        },
        "excluded": {
          "type": "boolean"
        },
        "onset": {
          "oneOf": [
            {
              "properties": {
                "gestational_age": {
                  "properties": {
                    "weeks": {
                      "type": "integer"
                    },
                    "days": {
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "Gestational Age"
                }
              },
              "title": "Gestational Age"
            },
            {
              "properties": {
                "age": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "Age",
                  "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
                }
              },
              "title": "Age"
            },
            {
              "properties": {
                "age_range": {
                  "properties": {
                    "start": {
                      "properties": {
                        "iso8601duration": {
                          "type": "string",
                          "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                        }
                      }
                    },
                    "end": {
                      "properties": {
                        "iso8601duration": {
                          "type": "string",
                          "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                        }
                      }
                    }
                  }
                }
              },
              "title": "Age Range"
            },
            {
              "properties": {
                "timestamp": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "title": "Timestamp"
            },
            {
              "properties": {
                "interval": {
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "Time Interval"
                }
              },
              "title": "Time Interval"
            }
          ],
          "description": "an element representing the age of onset of the disease"
        },
        "resolution": {
          "oneOf": [
            {
              "properties": {
                "gestational_age": {
                  "properties": {
                    "weeks": {
                      "type": "integer"
                    },
                    "days": {
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "Gestational Age"
                }
              },
              "title": "Gestational Age"
            },
            {
              "properties": {
                "age": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "Age",
                  "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
                }
              },
              "title": "Age"
            },
            {
              "properties": {
                "age_range": {
                  "properties": {
                    "start": {
                      "properties": {
                        "iso8601duration": {
                          "type": "string",
                          "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                        }
                      }
                    },
                    "end": {
                      "properties": {
                        "iso8601duration": {
                          "type": "string",
                          "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                        }
                      }
                    }
                  }
                }
              },
              "title": "Age Range"
            },
            {
              "properties": {
                "timestamp": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "title": "Timestamp"
            },
            {
              "properties": {
                "interval": {
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "Time Interval"
                }
              },
              "title": "Time Interval"
            }
          ],
          "description": "an element representing the age of resolution (abatement) of the disease"
        },
        "disease_stage": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            }
          }
        },
        "clinical_tnm_finding": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            }
          }
        },
        "primary_site": {
          "properties": {
            "id": {
              "type": "string"
            },
            "label": {
              "type": "string"
            }
          },
          "description": "the primary site of disease."
        },
        "laterality": {
          "properties": {
            "id": {
              "type": "string"
            },
            "label": {
              "type": "string"
            }
          },
          "description": "laterality (left or right) of the primary site of sites if applicable"
        }
      }
    },
    "Interpretation": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the interpretation",
          "title": "ID"
        },
        "progress_status": {
          "enum": [
            "UNKNOWN_PROGRESS",
            "IN_PROGRESS",
            "COMPLETED",
            "SOLVED",
            "UNSOLVED"
          ],
          "type": "string",
          "title": "Progress Status"
        },
        "summary": {
          "type": "string"
        },
        "diagnosis": {
          "properties": {
            "disease": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                }
              }
            },
            "genomic_interpretations": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "properties": {
                      "gene_descriptor": {
                        "properties": {
                          "value_id": {
                            "type": "string",
                            "title": "Gene Identifier",
                            "description": "The official gene identifier as designated by the organism gene nomenclature committee e.g. HGNC:3477 or MGI:2385071."
                          },
                          "symbol": {
                            "type": "string",
                            "title": "Gene Symbol",
                            "description": "The primary gene symbol. Takes the place of the label field in a generic descriptor."
                          },
                          "description": {
                            "type": "string",
                            "description": "A free-text description of this gene context."
                          },
                          "alternate_ids": {
                            "items": {
                              "type": "string",
                              "description": "Alternate IDs (should be CURIE) for the same gene context."
                            },
                            "type": "array",
                            "title": "Alternate Identifiers"
                          },
                          "alternate_symbols": {
                            "items": {
                              "type": "string",
                              "description": "Alternate symbols (should be CURIE) for the same gene context."
                            },
                            "type": "array",
                            "title": "Alternate Symbols"
                          },
                          "xrefs": {
                            "items": {
                              "type": "string",
                              "description": "Related concept IDs (e.g. gene ortholog IDs) may be placed in xrefs."
                            },
                            "type": "array",
                            "title": "External References"
                          }
                        }
                      }
                    },
                    "title": "Gene Descriptor"
                  },
                  {
                    "properties": {
                      "variant_interpretation": {
                        "properties": {
                          "acmg_pathogenicity_classification": {
                            "type": "string",
                            "oneOf": [
                              {
                                "const": "NOT_PROVIDED",
                                "title": "NOT_PROVIDED"
                              },
                              {
                                "const": "BENIGN",
                                "title": "BENIGN"
                              },
                              {
                                "const": "LIKELY_BENIGN",
                                "title": "LIKELY_BENIGN"
                              },
                              {
                                "const": "UNCERTAIN_SIGNIFICANCE",
                                "title": "UNCERTAIN_SIGNIFICANCE"
                              },
                              {
                                "const": "LIKELY_PATHOGENIC",
                                "title": "LIKELY_PATHOGENIC"
                              },
                              {
                                "const": "PATHOGENIC",
                                "title": "PATHOGENIC"
                              }
                            ]
                          },
                          "therapeutic_actionability": {
                            "type": "string",
                            "oneOf": [
                              {
                                "const": "UNKNOWN_ACTIONABILITY",
                                "title": "UNKNOWN_ACTIONABILITY"
                              },
                              {
                                "const": "NOT_ACTIONABLE",
                                "title": "NOT_ACTIONABLE"
                              },
                              {
                                "const": "ACTIONABLE",
                                "title": "ACTIONABLE"
                              }
                            ]
                          },
                          "variation_descriptor": {
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "variation": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "variation_set": {
                                        "properties": {
                                          "_id": {
                                            "type": "string",
                                            "pattern": "^\\w[^:]*:.+$",
                                            "title": "CURIE-style Identifier",
                                            "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                                          },
                                          "members": {
                                            "items": {
                                              "oneOf": [
                                                {
                                                  "properties": {
                                                    "allele": {
                                                      "allOf": [
                                                        {
                                                          "oneOf": [
                                                            {
                                                              "properties": {
                                                                "curie": {
                                                                  "type": "string",
                                                                  "pattern": "^\\w[^:]*:.+$",
                                                                  "title": "CURIE-style Identifier"
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "properties": {
                                                                "chromosome_location": {
                                                                  "properties": {
                                                                    "_id": {
                                                                      "type": "string",
                                                                      "pattern": "^\\w[^:]*:.+$",
                                                                      "title": "CURIE-style Identifier",
                                                                      "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                                                                    },
                                                                    "chr": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                        "CHR1",
                                                                        "CHR2",
                                                                        "CHR3",
                                                                        "CHR4",
                                                                        "CHR5",
                                                                        "CHR6",
                                                                        "CHR7",
                                                                        "CHR8",
                                                                        "CHR9",
                                                                        "CHR10",
                                                                        "CHR11",
                                                                        "CHR12",
                                                                        "CHR13",
                                                                        "CHR14",
                                                                        "CHR15",
                                                                        "CHR16",
                                                                        "CHR17",
                                                                        "CHR18",
                                                                        "CHR19",
                                                                        "CHR20",
                                                                        "CHR21",
                                                                        "CHR22",
                                                                        "CHRX",
                                                                        "CHRY"
                                                                      ]
                                                                    },
                                                                    "interval": {
                                                                      "properties": {
                                                                        "start": {
                                                                          "type": "string",
                                                                          "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$"
                                                                        },
                                                                        "end": {
                                                                          "type": "string",
                                                                          "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "properties": {
                                                                "sequence_location": {
                                                                  "properties": {
                                                                    "sequence_interval": {
                                                                      "oneOf": [
                                                                        {
                                                                          "properties": {
                                                                            "start_number": {
                                                                              "properties": {
                                                                                "value": {
                                                                                  "type": "integer"
                                                                                }
                                                                              }
                                                                            },
                                                                            "end_number": {
                                                                              "properties": {
                                                                                "value": {
                                                                                  "type": "integer"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "properties": {
                                                                            "start_indefinite_range": {
                                                                              "properties": {
                                                                                "value": {
                                                                                  "type": "integer"
                                                                                },
                                                                                "comparator": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                    "LTE",
                                                                                    "MTE"
                                                                                  ]
                                                                                }
                                                                              }
                                                                            },
                                                                            "end_indefinite_range": {
                                                                              "properties": {
                                                                                "value": {
                                                                                  "type": "integer"
                                                                                },
                                                                                "comparator": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                    "LTE",
                                                                                    "MTE"
                                                                                  ]
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "properties": {
                                                                            "start_definite_range": {
                                                                              "properties": {
                                                                                "min": {
                                                                                  "type": "integer"
                                                                                },
                                                                                "max": {
                                                                                  "type": "integer"
                                                                                }
                                                                              }
                                                                            },
                                                                            "end_definite_range": {
                                                                              "properties": {
                                                                                "min": {
                                                                                  "type": "integer"
                                                                                },
                                                                                "max": {
                                                                                  "type": "integer"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "sequence_id": {
                                                                      "type": "string",
                                                                      "pattern": "^ga4gh:\\w[^:]*$"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "oneOf": [
                                                            {
                                                              "properties": {
                                                                "sequence_state": {
                                                                  "properties": {
                                                                    "sequence": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "properties": {
                                                                "literal_sequence_expression": {
                                                                  "properties": {
                                                                    "sequence": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "properties": {
                                                                "derived_sequence_expression": {
                                                                  "properties": {
                                                                    "location": {
                                                                      "properties": {
                                                                        "sequence_interval": {
                                                                          "oneOf": [
                                                                            {
                                                                              "properties": {
                                                                                "start_number": {
                                                                                  "properties": {
                                                                                    "value": {
                                                                                      "type": "integer"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "end_number": {
                                                                                  "properties": {
                                                                                    "value": {
                                                                                      "type": "integer"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            {
                                                                              "properties": {
                                                                                "start_indefinite_range": {
                                                                                  "properties": {
                                                                                    "value": {
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "comparator": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                        "LTE",
                                                                                        "MTE"
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "end_indefinite_range": {
                                                                                  "properties": {
                                                                                    "value": {
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "comparator": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                        "LTE",
                                                                                        "MTE"
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            {
                                                                              "properties": {
                                                                                "start_definite_range": {
                                                                                  "properties": {
                                                                                    "min": {
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "max": {
                                                                                      "type": "integer"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "end_definite_range": {
                                                                                  "properties": {
                                                                                    "min": {
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "max": {
                                                                                      "type": "integer"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "sequence_id": {
                                                                          "type": "string",
                                                                          "pattern": "^ga4gh:\\w[^:]*$"
                                                                        }
                                                                      }
                                                                    },
                                                                    "reverse_complement": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "properties": {
                                                                "repeated_sequence_expression": {
                                                                  "properties": {
                                                                    "literal_sequence_expression": {
                                                                      "properties": {
                                                                        "sequence": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    },
                                                                    "derived_sequence_expression": {
                                                                      "properties": {
                                                                        "location": {
                                                                          "properties": {
                                                                            "sequence_interval": {
                                                                              "oneOf": [
                                                                                {
                                                                                  "properties": {
                                                                                    "start_number": {
                                                                                      "properties": {
                                                                                        "value": {
                                                                                          "type": "integer"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "end_number": {
                                                                                      "properties": {
                                                                                        "value": {
                                                                                          "type": "integer"
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "properties": {
                                                                                    "start_indefinite_range": {
                                                                                      "properties": {
                                                                                        "value": {
                                                                                          "type": "integer"
                                                                                        },
                                                                                        "comparator": {
                                                                                          "type": "string",
                                                                                          "enum": [
                                                                                            "LTE",
                                                                                            "MTE"
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "end_indefinite_range": {
                                                                                      "properties": {
                                                                                        "value": {
                                                                                          "type": "integer"
                                                                                        },
                                                                                        "comparator": {
                                                                                          "type": "string",
                                                                                          "enum": [
                                                                                            "LTE",
                                                                                            "MTE"
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "properties": {
                                                                                    "start_definite_range": {
                                                                                      "properties": {
                                                                                        "min": {
                                                                                          "type": "integer"
                                                                                        },
                                                                                        "max": {
                                                                                          "type": "integer"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "end_definite_range": {
                                                                                      "properties": {
                                                                                        "min": {
                                                                                          "type": "integer"
                                                                                        },
                                                                                        "max": {
                                                                                          "type": "integer"
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "sequence_id": {
                                                                              "type": "string",
                                                                              "pattern": "^ga4gh:\\w[^:]*$"
                                                                            }
                                                                          }
                                                                        },
                                                                        "reverse_complement": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    },
                                                                    "number": {
                                                                      "properties": {
                                                                        "value": {
                                                                          "type": "integer"
                                                                        }
                                                                      }
                                                                    },
                                                                    "indefinite_range": {
                                                                      "properties": {
                                                                        "value": {
                                                                          "type": "integer"
                                                                        },
                                                                        "comparator": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                            "LTE",
                                                                            "MTE"
                                                                          ]
                                                                        }
                                                                      }
                                                                    },
                                                                    "definite_range": {
                                                                      "properties": {
                                                                        "min": {
                                                                          "type": "integer"
                                                                        },
                                                                        "max": {
                                                                          "type": "integer"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "properties": {
                                                            "_id": {
                                                              "type": "string",
                                                              "pattern": "^\\w[^:]*:.+$",
                                                              "title": "CURIE-style Identifier",
                                                              "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Allele"
                                                    }
                                                  },
                                                  "required": [
                                                    "type"
                                                  ],
                                                  "title": "Allele"
                                                },
                                                {
                                                  "properties": {
                                                    "curie": {
                                                      "type": "string",
                                                      "pattern": "^\\w[^:]*:.+$",
                                                      "description": "References to Alleles that comprise this Haplotype."
                                                    }
                                                  },
                                                  "title": "Reference"
                                                }
                                              ]
                                            },
                                            "type": "array",
                                            "title": "Alleles (a set of non-overlapping Alleles that co-occur on the same molecule)"
                                          }
                                        },
                                        "title": "Variation Set"
                                      }
                                    }
                                  },
                                  {
                                    "properties": {
                                      "allele": {
                                        "allOf": [
                                          {
                                            "oneOf": [
                                              {
                                                "properties": {
                                                  "curie": {
                                                    "type": "string",
                                                    "pattern": "^\\w[^:]*:.+$",
                                                    "title": "CURIE-style Identifier"
                                                  }
                                                }
                                              },
                                              {
                                                "properties": {
                                                  "chromosome_location": {
                                                    "properties": {
                                                      "_id": {
                                                        "type": "string",
                                                        "pattern": "^\\w[^:]*:.+$",
                                                        "title": "CURIE-style Identifier",
                                                        "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                                                      },
                                                      "chr": {
                                                        "type": "string",
                                                        "enum": [
                                                          "CHR1",
                                                          "CHR2",
                                                          "CHR3",
                                                          "CHR4",
                                                          "CHR5",
                                                          "CHR6",
                                                          "CHR7",
                                                          "CHR8",
                                                          "CHR9",
                                                          "CHR10",
                                                          "CHR11",
                                                          "CHR12",
                                                          "CHR13",
                                                          "CHR14",
                                                          "CHR15",
                                                          "CHR16",
                                                          "CHR17",
                                                          "CHR18",
                                                          "CHR19",
                                                          "CHR20",
                                                          "CHR21",
                                                          "CHR22",
                                                          "CHRX",
                                                          "CHRY"
                                                        ]
                                                      },
                                                      "interval": {
                                                        "properties": {
                                                          "start": {
                                                            "type": "string",
                                                            "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$"
                                                          },
                                                          "end": {
                                                            "type": "string",
                                                            "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "properties": {
                                                  "sequence_location": {
                                                    "properties": {
                                                      "sequence_interval": {
                                                        "oneOf": [
                                                          {
                                                            "properties": {
                                                              "start_number": {
                                                                "properties": {
                                                                  "value": {
                                                                    "type": "integer"
                                                                  }
                                                                }
                                                              },
                                                              "end_number": {
                                                                "properties": {
                                                                  "value": {
                                                                    "type": "integer"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "properties": {
                                                              "start_indefinite_range": {
                                                                "properties": {
                                                                  "value": {
                                                                    "type": "integer"
                                                                  },
                                                                  "comparator": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                      "LTE",
                                                                      "MTE"
                                                                    ]
                                                                  }
                                                                }
                                                              },
                                                              "end_indefinite_range": {
                                                                "properties": {
                                                                  "value": {
                                                                    "type": "integer"
                                                                  },
                                                                  "comparator": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                      "LTE",
                                                                      "MTE"
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "properties": {
                                                              "start_definite_range": {
                                                                "properties": {
                                                                  "min": {
                                                                    "type": "integer"
                                                                  },
                                                                  "max": {
                                                                    "type": "integer"
                                                                  }
                                                                }
                                                              },
                                                              "end_definite_range": {
                                                                "properties": {
                                                                  "min": {
                                                                    "type": "integer"
                                                                  },
                                                                  "max": {
                                                                    "type": "integer"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "sequence_id": {
                                                        "type": "string",
                                                        "pattern": "^ga4gh:\\w[^:]*$"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "oneOf": [
                                              {
                                                "properties": {
                                                  "sequence_state": {
                                                    "properties": {
                                                      "sequence": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "properties": {
                                                  "literal_sequence_expression": {
                                                    "properties": {
                                                      "sequence": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "properties": {
                                                  "derived_sequence_expression": {
                                                    "properties": {
                                                      "location": {
                                                        "properties": {
                                                          "sequence_interval": {
                                                            "oneOf": [
                                                              {
                                                                "properties": {
                                                                  "start_number": {
                                                                    "properties": {
                                                                      "value": {
                                                                        "type": "integer"
                                                                      }
                                                                    }
                                                                  },
                                                                  "end_number": {
                                                                    "properties": {
                                                                      "value": {
                                                                        "type": "integer"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "properties": {
                                                                  "start_indefinite_range": {
                                                                    "properties": {
                                                                      "value": {
                                                                        "type": "integer"
                                                                      },
                                                                      "comparator": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                          "LTE",
                                                                          "MTE"
                                                                        ]
                                                                      }
                                                                    }
                                                                  },
                                                                  "end_indefinite_range": {
                                                                    "properties": {
                                                                      "value": {
                                                                        "type": "integer"
                                                                      },
                                                                      "comparator": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                          "LTE",
                                                                          "MTE"
                                                                        ]
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "properties": {
                                                                  "start_definite_range": {
                                                                    "properties": {
                                                                      "min": {
                                                                        "type": "integer"
                                                                      },
                                                                      "max": {
                                                                        "type": "integer"
                                                                      }
                                                                    }
                                                                  },
                                                                  "end_definite_range": {
                                                                    "properties": {
                                                                      "min": {
                                                                        "type": "integer"
                                                                      },
                                                                      "max": {
                                                                        "type": "integer"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "sequence_id": {
                                                            "type": "string",
                                                            "pattern": "^ga4gh:\\w[^:]*$"
                                                          }
                                                        }
                                                      },
                                                      "reverse_complement": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "properties": {
                                                  "repeated_sequence_expression": {
                                                    "properties": {
                                                      "literal_sequence_expression": {
                                                        "properties": {
                                                          "sequence": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "derived_sequence_expression": {
                                                        "properties": {
                                                          "location": {
                                                            "properties": {
                                                              "sequence_interval": {
                                                                "oneOf": [
                                                                  {
                                                                    "properties": {
                                                                      "start_number": {
                                                                        "properties": {
                                                                          "value": {
                                                                            "type": "integer"
                                                                          }
                                                                        }
                                                                      },
                                                                      "end_number": {
                                                                        "properties": {
                                                                          "value": {
                                                                            "type": "integer"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "properties": {
                                                                      "start_indefinite_range": {
                                                                        "properties": {
                                                                          "value": {
                                                                            "type": "integer"
                                                                          },
                                                                          "comparator": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                              "LTE",
                                                                              "MTE"
                                                                            ]
                                                                          }
                                                                        }
                                                                      },
                                                                      "end_indefinite_range": {
                                                                        "properties": {
                                                                          "value": {
                                                                            "type": "integer"
                                                                          },
                                                                          "comparator": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                              "LTE",
                                                                              "MTE"
                                                                            ]
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "properties": {
                                                                      "start_definite_range": {
                                                                        "properties": {
                                                                          "min": {
                                                                            "type": "integer"
                                                                          },
                                                                          "max": {
                                                                            "type": "integer"
                                                                          }
                                                                        }
                                                                      },
                                                                      "end_definite_range": {
                                                                        "properties": {
                                                                          "min": {
                                                                            "type": "integer"
                                                                          },
                                                                          "max": {
                                                                            "type": "integer"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "sequence_id": {
                                                                "type": "string",
                                                                "pattern": "^ga4gh:\\w[^:]*$"
                                                              }
                                                            }
                                                          },
                                                          "reverse_complement": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "number": {
                                                        "properties": {
                                                          "value": {
                                                            "type": "integer"
                                                          }
                                                        }
                                                      },
                                                      "indefinite_range": {
                                                        "properties": {
                                                          "value": {
                                                            "type": "integer"
                                                          },
                                                          "comparator": {
                                                            "type": "string",
                                                            "enum": [
                                                              "LTE",
                                                              "MTE"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "definite_range": {
                                                        "properties": {
                                                          "min": {
                                                            "type": "integer"
                                                          },
                                                          "max": {
                                                            "type": "integer"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "properties": {
                                              "_id": {
                                                "type": "string",
                                                "pattern": "^\\w[^:]*:.+$",
                                                "title": "CURIE-style Identifier",
                                                "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                                              }
                                            }
                                          }
                                        ],
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Allele"
                                      }
                                    }
                                  },
                                  {
                                    "properties": {
                                      "copy_number": {
                                        "allOf": [
                                          {
                                            "oneOf": [
                                              {
                                                "properties": {
                                                  "allele": {
                                                    "allOf": [
                                                      {
                                                        "oneOf": [
                                                          {
                                                            "properties": {
                                                              "curie": {
                                                                "type": "string",
                                                                "pattern": "^\\w[^:]*:.+$",
                                                                "title": "CURIE-style Identifier"
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "properties": {
                                                              "chromosome_location": {
                                                                "properties": {
                                                                  "_id": {
                                                                    "type": "string",
                                                                    "pattern": "^\\w[^:]*:.+$",
                                                                    "title": "CURIE-style Identifier",
                                                                    "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                                                                  },
                                                                  "chr": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                      "CHR1",
                                                                      "CHR2",
                                                                      "CHR3",
                                                                      "CHR4",
                                                                      "CHR5",
                                                                      "CHR6",
                                                                      "CHR7",
                                                                      "CHR8",
                                                                      "CHR9",
                                                                      "CHR10",
                                                                      "CHR11",
                                                                      "CHR12",
                                                                      "CHR13",
                                                                      "CHR14",
                                                                      "CHR15",
                                                                      "CHR16",
                                                                      "CHR17",
                                                                      "CHR18",
                                                                      "CHR19",
                                                                      "CHR20",
                                                                      "CHR21",
                                                                      "CHR22",
                                                                      "CHRX",
                                                                      "CHRY"
                                                                    ]
                                                                  },
                                                                  "interval": {
                                                                    "properties": {
                                                                      "start": {
                                                                        "type": "string",
                                                                        "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$"
                                                                      },
                                                                      "end": {
                                                                        "type": "string",
                                                                        "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "properties": {
                                                              "sequence_location": {
                                                                "properties": {
                                                                  "sequence_interval": {
                                                                    "oneOf": [
                                                                      {
                                                                        "properties": {
                                                                          "start_number": {
                                                                            "properties": {
                                                                              "value": {
                                                                                "type": "integer"
                                                                              }
                                                                            }
                                                                          },
                                                                          "end_number": {
                                                                            "properties": {
                                                                              "value": {
                                                                                "type": "integer"
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      {
                                                                        "properties": {
                                                                          "start_indefinite_range": {
                                                                            "properties": {
                                                                              "value": {
                                                                                "type": "integer"
                                                                              },
                                                                              "comparator": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                  "LTE",
                                                                                  "MTE"
                                                                                ]
                                                                              }
                                                                            }
                                                                          },
                                                                          "end_indefinite_range": {
                                                                            "properties": {
                                                                              "value": {
                                                                                "type": "integer"
                                                                              },
                                                                              "comparator": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                  "LTE",
                                                                                  "MTE"
                                                                                ]
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      {
                                                                        "properties": {
                                                                          "start_definite_range": {
                                                                            "properties": {
                                                                              "min": {
                                                                                "type": "integer"
                                                                              },
                                                                              "max": {
                                                                                "type": "integer"
                                                                              }
                                                                            }
                                                                          },
                                                                          "end_definite_range": {
                                                                            "properties": {
                                                                              "min": {
                                                                                "type": "integer"
                                                                              },
                                                                              "max": {
                                                                                "type": "integer"
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "sequence_id": {
                                                                    "type": "string",
                                                                    "pattern": "^ga4gh:\\w[^:]*$"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "oneOf": [
                                                          {
                                                            "properties": {
                                                              "sequence_state": {
                                                                "properties": {
                                                                  "sequence": {
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "properties": {
                                                              "literal_sequence_expression": {
                                                                "properties": {
                                                                  "sequence": {
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "properties": {
                                                              "derived_sequence_expression": {
                                                                "properties": {
                                                                  "location": {
                                                                    "properties": {
                                                                      "sequence_interval": {
                                                                        "oneOf": [
                                                                          {
                                                                            "properties": {
                                                                              "start_number": {
                                                                                "properties": {
                                                                                  "value": {
                                                                                    "type": "integer"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "end_number": {
                                                                                "properties": {
                                                                                  "value": {
                                                                                    "type": "integer"
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          {
                                                                            "properties": {
                                                                              "start_indefinite_range": {
                                                                                "properties": {
                                                                                  "value": {
                                                                                    "type": "integer"
                                                                                  },
                                                                                  "comparator": {
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                      "LTE",
                                                                                      "MTE"
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              },
                                                                              "end_indefinite_range": {
                                                                                "properties": {
                                                                                  "value": {
                                                                                    "type": "integer"
                                                                                  },
                                                                                  "comparator": {
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                      "LTE",
                                                                                      "MTE"
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          {
                                                                            "properties": {
                                                                              "start_definite_range": {
                                                                                "properties": {
                                                                                  "min": {
                                                                                    "type": "integer"
                                                                                  },
                                                                                  "max": {
                                                                                    "type": "integer"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "end_definite_range": {
                                                                                "properties": {
                                                                                  "min": {
                                                                                    "type": "integer"
                                                                                  },
                                                                                  "max": {
                                                                                    "type": "integer"
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "sequence_id": {
                                                                        "type": "string",
                                                                        "pattern": "^ga4gh:\\w[^:]*$"
                                                                      }
                                                                    }
                                                                  },
                                                                  "reverse_complement": {
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "properties": {
                                                              "repeated_sequence_expression": {
                                                                "properties": {
                                                                  "literal_sequence_expression": {
                                                                    "properties": {
                                                                      "sequence": {
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  },
                                                                  "derived_sequence_expression": {
                                                                    "properties": {
                                                                      "location": {
                                                                        "properties": {
                                                                          "sequence_interval": {
                                                                            "oneOf": [
                                                                              {
                                                                                "properties": {
                                                                                  "start_number": {
                                                                                    "properties": {
                                                                                      "value": {
                                                                                        "type": "integer"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "end_number": {
                                                                                    "properties": {
                                                                                      "value": {
                                                                                        "type": "integer"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "properties": {
                                                                                  "start_indefinite_range": {
                                                                                    "properties": {
                                                                                      "value": {
                                                                                        "type": "integer"
                                                                                      },
                                                                                      "comparator": {
                                                                                        "type": "string",
                                                                                        "enum": [
                                                                                          "LTE",
                                                                                          "MTE"
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "end_indefinite_range": {
                                                                                    "properties": {
                                                                                      "value": {
                                                                                        "type": "integer"
                                                                                      },
                                                                                      "comparator": {
                                                                                        "type": "string",
                                                                                        "enum": [
                                                                                          "LTE",
                                                                                          "MTE"
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "properties": {
                                                                                  "start_definite_range": {
                                                                                    "properties": {
                                                                                      "min": {
                                                                                        "type": "integer"
                                                                                      },
                                                                                      "max": {
                                                                                        "type": "integer"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "end_definite_range": {
                                                                                    "properties": {
                                                                                      "min": {
                                                                                        "type": "integer"
                                                                                      },
                                                                                      "max": {
                                                                                        "type": "integer"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "sequence_id": {
                                                                            "type": "string",
                                                                            "pattern": "^ga4gh:\\w[^:]*$"
                                                                          }
                                                                        }
                                                                      },
                                                                      "reverse_complement": {
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  },
                                                                  "number": {
                                                                    "properties": {
                                                                      "value": {
                                                                        "type": "integer"
                                                                      }
                                                                    }
                                                                  },
                                                                  "indefinite_range": {
                                                                    "properties": {
                                                                      "value": {
                                                                        "type": "integer"
                                                                      },
                                                                      "comparator": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                          "LTE",
                                                                          "MTE"
                                                                        ]
                                                                      }
                                                                    }
                                                                  },
                                                                  "definite_range": {
                                                                    "properties": {
                                                                      "min": {
                                                                        "type": "integer"
                                                                      },
                                                                      "max": {
                                                                        "type": "integer"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "properties": {
                                                          "_id": {
                                                            "type": "string",
                                                            "pattern": "^\\w[^:]*:.+$",
                                                            "title": "CURIE-style Identifier",
                                                            "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                                                          }
                                                        }
                                                      }
                                                    ],
                                                    "required": [
                                                      "type"
                                                    ],
                                                    "title": "Allele"
                                                  }
                                                }
                                              },
                                              {
                                                "properties": {
                                                  "haplotype": {
                                                    "properties": {
                                                      "_id": {
                                                        "type": "string",
                                                        "pattern": "^\\w[^:]*:.+$",
                                                        "title": "CURIE-style Identifier",
                                                        "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                                                      },
                                                      "members": {
                                                        "items": {
                                                          "oneOf": [
                                                            {
                                                              "properties": {
                                                                "allele": {
                                                                  "allOf": [
                                                                    {
                                                                      "oneOf": [
                                                                        {
                                                                          "properties": {
                                                                            "curie": {
                                                                              "type": "string",
                                                                              "pattern": "^\\w[^:]*:.+$",
                                                                              "title": "CURIE-style Identifier"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "properties": {
                                                                            "chromosome_location": {
                                                                              "properties": {
                                                                                "_id": {
                                                                                  "type": "string",
                                                                                  "pattern": "^\\w[^:]*:.+$",
                                                                                  "title": "CURIE-style Identifier",
                                                                                  "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                                                                                },
                                                                                "chr": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                    "CHR1",
                                                                                    "CHR2",
                                                                                    "CHR3",
                                                                                    "CHR4",
                                                                                    "CHR5",
                                                                                    "CHR6",
                                                                                    "CHR7",
                                                                                    "CHR8",
                                                                                    "CHR9",
                                                                                    "CHR10",
                                                                                    "CHR11",
                                                                                    "CHR12",
                                                                                    "CHR13",
                                                                                    "CHR14",
                                                                                    "CHR15",
                                                                                    "CHR16",
                                                                                    "CHR17",
                                                                                    "CHR18",
                                                                                    "CHR19",
                                                                                    "CHR20",
                                                                                    "CHR21",
                                                                                    "CHR22",
                                                                                    "CHRX",
                                                                                    "CHRY"
                                                                                  ]
                                                                                },
                                                                                "interval": {
                                                                                  "properties": {
                                                                                    "start": {
                                                                                      "type": "string",
                                                                                      "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$"
                                                                                    },
                                                                                    "end": {
                                                                                      "type": "string",
                                                                                      "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "properties": {
                                                                            "sequence_location": {
                                                                              "properties": {
                                                                                "sequence_interval": {
                                                                                  "oneOf": [
                                                                                    {
                                                                                      "properties": {
                                                                                        "start_number": {
                                                                                          "properties": {
                                                                                            "value": {
                                                                                              "type": "integer"
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "end_number": {
                                                                                          "properties": {
                                                                                            "value": {
                                                                                              "type": "integer"
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "properties": {
                                                                                        "start_indefinite_range": {
                                                                                          "properties": {
                                                                                            "value": {
                                                                                              "type": "integer"
                                                                                            },
                                                                                            "comparator": {
                                                                                              "type": "string",
                                                                                              "enum": [
                                                                                                "LTE",
                                                                                                "MTE"
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "end_indefinite_range": {
                                                                                          "properties": {
                                                                                            "value": {
                                                                                              "type": "integer"
                                                                                            },
                                                                                            "comparator": {
                                                                                              "type": "string",
                                                                                              "enum": [
                                                                                                "LTE",
                                                                                                "MTE"
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "properties": {
                                                                                        "start_definite_range": {
                                                                                          "properties": {
                                                                                            "min": {
                                                                                              "type": "integer"
                                                                                            },
                                                                                            "max": {
                                                                                              "type": "integer"
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        "end_definite_range": {
                                                                                          "properties": {
                                                                                            "min": {
                                                                                              "type": "integer"
                                                                                            },
                                                                                            "max": {
                                                                                              "type": "integer"
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "sequence_id": {
                                                                                  "type": "string",
                                                                                  "pattern": "^ga4gh:\\w[^:]*$"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "oneOf": [
                                                                        {
                                                                          "properties": {
                                                                            "sequence_state": {
                                                                              "properties": {
                                                                                "sequence": {
                                                                                  "type": "string"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "properties": {
                                                                            "literal_sequence_expression": {
                                                                              "properties": {
                                                                                "sequence": {
                                                                                  "type": "string"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "properties": {
                                                                            "derived_sequence_expression": {
                                                                              "properties": {
                                                                                "location": {
                                                                                  "properties": {
                                                                                    "sequence_interval": {
                                                                                      "oneOf": [
                                                                                        {
                                                                                          "properties": {
                                                                                            "start_number": {
                                                                                              "properties": {
                                                                                                "value": {
                                                                                                  "type": "integer"
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            "end_number": {
                                                                                              "properties": {
                                                                                                "value": {
                                                                                                  "type": "integer"
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        {
                                                                                          "properties": {
                                                                                            "start_indefinite_range": {
                                                                                              "properties": {
                                                                                                "value": {
                                                                                                  "type": "integer"
                                                                                                },
                                                                                                "comparator": {
                                                                                                  "type": "string",
                                                                                                  "enum": [
                                                                                                    "LTE",
                                                                                                    "MTE"
                                                                                                  ]
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            "end_indefinite_range": {
                                                                                              "properties": {
                                                                                                "value": {
                                                                                                  "type": "integer"
                                                                                                },
                                                                                                "comparator": {
                                                                                                  "type": "string",
                                                                                                  "enum": [
                                                                                                    "LTE",
                                                                                                    "MTE"
                                                                                                  ]
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        {
                                                                                          "properties": {
                                                                                            "start_definite_range": {
                                                                                              "properties": {
                                                                                                "min": {
                                                                                                  "type": "integer"
                                                                                                },
                                                                                                "max": {
                                                                                                  "type": "integer"
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            "end_definite_range": {
                                                                                              "properties": {
                                                                                                "min": {
                                                                                                  "type": "integer"
                                                                                                },
                                                                                                "max": {
                                                                                                  "type": "integer"
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    "sequence_id": {
                                                                                      "type": "string",
                                                                                      "pattern": "^ga4gh:\\w[^:]*$"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "reverse_complement": {
                                                                                  "type": "string"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "properties": {
                                                                            "repeated_sequence_expression": {
                                                                              "properties": {
                                                                                "literal_sequence_expression": {
                                                                                  "properties": {
                                                                                    "sequence": {
                                                                                      "type": "string"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "derived_sequence_expression": {
                                                                                  "properties": {
                                                                                    "location": {
                                                                                      "properties": {
                                                                                        "sequence_interval": {
                                                                                          "oneOf": [
                                                                                            {
                                                                                              "properties": {
                                                                                                "start_number": {
                                                                                                  "properties": {
                                                                                                    "value": {
                                                                                                      "type": "integer"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "end_number": {
                                                                                                  "properties": {
                                                                                                    "value": {
                                                                                                      "type": "integer"
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "properties": {
                                                                                                "start_indefinite_range": {
                                                                                                  "properties": {
                                                                                                    "value": {
                                                                                                      "type": "integer"
                                                                                                    },
                                                                                                    "comparator": {
                                                                                                      "type": "string",
                                                                                                      "enum": [
                                                                                                        "LTE",
                                                                                                        "MTE"
                                                                                                      ]
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "end_indefinite_range": {
                                                                                                  "properties": {
                                                                                                    "value": {
                                                                                                      "type": "integer"
                                                                                                    },
                                                                                                    "comparator": {
                                                                                                      "type": "string",
                                                                                                      "enum": [
                                                                                                        "LTE",
                                                                                                        "MTE"
                                                                                                      ]
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "properties": {
                                                                                                "start_definite_range": {
                                                                                                  "properties": {
                                                                                                    "min": {
                                                                                                      "type": "integer"
                                                                                                    },
                                                                                                    "max": {
                                                                                                      "type": "integer"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "end_definite_range": {
                                                                                                  "properties": {
                                                                                                    "min": {
                                                                                                      "type": "integer"
                                                                                                    },
                                                                                                    "max": {
                                                                                                      "type": "integer"
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        "sequence_id": {
                                                                                          "type": "string",
                                                                                          "pattern": "^ga4gh:\\w[^:]*$"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "reverse_complement": {
                                                                                      "type": "string"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "number": {
                                                                                  "properties": {
                                                                                    "value": {
                                                                                      "type": "integer"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "indefinite_range": {
                                                                                  "properties": {
                                                                                    "value": {
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "comparator": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                        "LTE",
                                                                                        "MTE"
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "definite_range": {
                                                                                  "properties": {
                                                                                    "min": {
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "max": {
                                                                                      "type": "integer"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "properties": {
                                                                        "_id": {
                                                                          "type": "string",
                                                                          "pattern": "^\\w[^:]*:.+$",
                                                                          "title": "CURIE-style Identifier",
                                                                          "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                                                                        }
                                                                      }
                                                                    }
                                                                  ],
                                                                  "required": [
                                                                    "type"
                                                                  ],
                                                                  "title": "Allele"
                                                                }
                                                              },
                                                              "required": [
                                                                "type"
                                                              ],
                                                              "title": "Allele"
                                                            },
                                                            {
                                                              "properties": {
                                                                "curie": {
                                                                  "type": "string",
                                                                  "pattern": "^\\w[^:]*:.+$",
                                                                  "description": "References to Alleles that comprise this Haplotype."
                                                                }
                                                              },
                                                              "title": "Reference"
                                                            }
                                                          ]
                                                        },
                                                        "type": "array",
                                                        "title": "Alleles (a set of non-overlapping Alleles that co-occur on the same molecule)"
                                                      }
                                                    },
                                                    "required": [
                                                      "type"
                                                    ],
                                                    "title": "Haplotype",
                                                    "description": "List of Alleles, or references to Alleles, that comprise this Haplotype."
                                                  }
                                                }
                                              },
                                              {
                                                "properties": {
                                                  "gene": {
                                                    "properties": {
                                                      "gene_id": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "properties": {
                                                  "literal_sequence_expression": {
                                                    "properties": {
                                                      "sequence": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "properties": {
                                                  "derived_sequence_expression": {
                                                    "properties": {
                                                      "location": {
                                                        "properties": {
                                                          "sequence_interval": {
                                                            "oneOf": [
                                                              {
                                                                "properties": {
                                                                  "start_number": {
                                                                    "properties": {
                                                                      "value": {
                                                                        "type": "integer"
                                                                      }
                                                                    }
                                                                  },
                                                                  "end_number": {
                                                                    "properties": {
                                                                      "value": {
                                                                        "type": "integer"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "properties": {
                                                                  "start_indefinite_range": {
                                                                    "properties": {
                                                                      "value": {
                                                                        "type": "integer"
                                                                      },
                                                                      "comparator": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                          "LTE",
                                                                          "MTE"
                                                                        ]
                                                                      }
                                                                    }
                                                                  },
                                                                  "end_indefinite_range": {
                                                                    "properties": {
                                                                      "value": {
                                                                        "type": "integer"
                                                                      },
                                                                      "comparator": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                          "LTE",
                                                                          "MTE"
                                                                        ]
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "properties": {
                                                                  "start_definite_range": {
                                                                    "properties": {
                                                                      "min": {
                                                                        "type": "integer"
                                                                      },
                                                                      "max": {
                                                                        "type": "integer"
                                                                      }
                                                                    }
                                                                  },
                                                                  "end_definite_range": {
                                                                    "properties": {
                                                                      "min": {
                                                                        "type": "integer"
                                                                      },
                                                                      "max": {
                                                                        "type": "integer"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "sequence_id": {
                                                            "type": "string",
                                                            "pattern": "^ga4gh:\\w[^:]*$"
                                                          }
                                                        }
                                                      },
                                                      "reverse_complement": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "properties": {
                                                  "repeated_sequence_expression": {
                                                    "properties": {
                                                      "literal_sequence_expression": {
                                                        "properties": {
                                                          "sequence": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "derived_sequence_expression": {
                                                        "properties": {
                                                          "location": {
                                                            "properties": {
                                                              "sequence_interval": {
                                                                "oneOf": [
                                                                  {
                                                                    "properties": {
                                                                      "start_number": {
                                                                        "properties": {
                                                                          "value": {
                                                                            "type": "integer"
                                                                          }
                                                                        }
                                                                      },
                                                                      "end_number": {
                                                                        "properties": {
                                                                          "value": {
                                                                            "type": "integer"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "properties": {
                                                                      "start_indefinite_range": {
                                                                        "properties": {
                                                                          "value": {
                                                                            "type": "integer"
                                                                          },
                                                                          "comparator": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                              "LTE",
                                                                              "MTE"
                                                                            ]
                                                                          }
                                                                        }
                                                                      },
                                                                      "end_indefinite_range": {
                                                                        "properties": {
                                                                          "value": {
                                                                            "type": "integer"
                                                                          },
                                                                          "comparator": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                              "LTE",
                                                                              "MTE"
                                                                            ]
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "properties": {
                                                                      "start_definite_range": {
                                                                        "properties": {
                                                                          "min": {
                                                                            "type": "integer"
                                                                          },
                                                                          "max": {
                                                                            "type": "integer"
                                                                          }
                                                                        }
                                                                      },
                                                                      "end_definite_range": {
                                                                        "properties": {
                                                                          "min": {
                                                                            "type": "integer"
                                                                          },
                                                                          "max": {
                                                                            "type": "integer"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "sequence_id": {
                                                                "type": "string",
                                                                "pattern": "^ga4gh:\\w[^:]*$"
                                                              }
                                                            }
                                                          },
                                                          "reverse_complement": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "number": {
                                                        "properties": {
                                                          "value": {
                                                            "type": "integer"
                                                          }
                                                        }
                                                      },
                                                      "indefinite_range": {
                                                        "properties": {
                                                          "value": {
                                                            "type": "integer"
                                                          },
                                                          "comparator": {
                                                            "type": "string",
                                                            "enum": [
                                                              "LTE",
                                                              "MTE"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "definite_range": {
                                                        "properties": {
                                                          "min": {
                                                            "type": "integer"
                                                          },
                                                          "max": {
                                                            "type": "integer"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "properties": {
                                                  "curie": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "oneOf": [
                                              {
                                                "properties": {
                                                  "number": {
                                                    "properties": {
                                                      "value": {
                                                        "type": "integer"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "properties": {
                                                  "indefinite_range": {
                                                    "properties": {
                                                      "value": {
                                                        "type": "integer"
                                                      },
                                                      "comparator": {
                                                        "type": "string",
                                                        "enum": [
                                                          "LTE",
                                                          "MTE"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "properties": {
                                                  "definite_range": {
                                                    "properties": {
                                                      "min": {
                                                        "type": "integer"
                                                      },
                                                      "max": {
                                                        "type": "integer"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "properties": {
                                              "_id": {
                                                "type": "string",
                                                "pattern": "^\\w[^:]*:.+$",
                                                "title": "CURIE-style Identifier",
                                                "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                                              }
                                            }
                                          }
                                        ],
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Copy Number"
                                      }
                                    }
                                  },
                                  {
                                    "properties": {
                                      "haplotype": {
                                        "properties": {
                                          "_id": {
                                            "type": "string",
                                            "pattern": "^\\w[^:]*:.+$",
                                            "title": "CURIE-style Identifier",
                                            "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                                          },
                                          "members": {
                                            "items": {
                                              "oneOf": [
                                                {
                                                  "properties": {
                                                    "allele": {
                                                      "allOf": [
                                                        {
                                                          "oneOf": [
                                                            {
                                                              "properties": {
                                                                "curie": {
                                                                  "type": "string",
                                                                  "pattern": "^\\w[^:]*:.+$",
                                                                  "title": "CURIE-style Identifier"
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "properties": {
                                                                "chromosome_location": {
                                                                  "properties": {
                                                                    "_id": {
                                                                      "type": "string",
                                                                      "pattern": "^\\w[^:]*:.+$",
                                                                      "title": "CURIE-style Identifier",
                                                                      "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                                                                    },
                                                                    "chr": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                        "CHR1",
                                                                        "CHR2",
                                                                        "CHR3",
                                                                        "CHR4",
                                                                        "CHR5",
                                                                        "CHR6",
                                                                        "CHR7",
                                                                        "CHR8",
                                                                        "CHR9",
                                                                        "CHR10",
                                                                        "CHR11",
                                                                        "CHR12",
                                                                        "CHR13",
                                                                        "CHR14",
                                                                        "CHR15",
                                                                        "CHR16",
                                                                        "CHR17",
                                                                        "CHR18",
                                                                        "CHR19",
                                                                        "CHR20",
                                                                        "CHR21",
                                                                        "CHR22",
                                                                        "CHRX",
                                                                        "CHRY"
                                                                      ]
                                                                    },
                                                                    "interval": {
                                                                      "properties": {
                                                                        "start": {
                                                                          "type": "string",
                                                                          "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$"
                                                                        },
                                                                        "end": {
                                                                          "type": "string",
                                                                          "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "properties": {
                                                                "sequence_location": {
                                                                  "properties": {
                                                                    "sequence_interval": {
                                                                      "oneOf": [
                                                                        {
                                                                          "properties": {
                                                                            "start_number": {
                                                                              "properties": {
                                                                                "value": {
                                                                                  "type": "integer"
                                                                                }
                                                                              }
                                                                            },
                                                                            "end_number": {
                                                                              "properties": {
                                                                                "value": {
                                                                                  "type": "integer"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "properties": {
                                                                            "start_indefinite_range": {
                                                                              "properties": {
                                                                                "value": {
                                                                                  "type": "integer"
                                                                                },
                                                                                "comparator": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                    "LTE",
                                                                                    "MTE"
                                                                                  ]
                                                                                }
                                                                              }
                                                                            },
                                                                            "end_indefinite_range": {
                                                                              "properties": {
                                                                                "value": {
                                                                                  "type": "integer"
                                                                                },
                                                                                "comparator": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                    "LTE",
                                                                                    "MTE"
                                                                                  ]
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "properties": {
                                                                            "start_definite_range": {
                                                                              "properties": {
                                                                                "min": {
                                                                                  "type": "integer"
                                                                                },
                                                                                "max": {
                                                                                  "type": "integer"
                                                                                }
                                                                              }
                                                                            },
                                                                            "end_definite_range": {
                                                                              "properties": {
                                                                                "min": {
                                                                                  "type": "integer"
                                                                                },
                                                                                "max": {
                                                                                  "type": "integer"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "sequence_id": {
                                                                      "type": "string",
                                                                      "pattern": "^ga4gh:\\w[^:]*$"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "oneOf": [
                                                            {
                                                              "properties": {
                                                                "sequence_state": {
                                                                  "properties": {
                                                                    "sequence": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "properties": {
                                                                "literal_sequence_expression": {
                                                                  "properties": {
                                                                    "sequence": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "properties": {
                                                                "derived_sequence_expression": {
                                                                  "properties": {
                                                                    "location": {
                                                                      "properties": {
                                                                        "sequence_interval": {
                                                                          "oneOf": [
                                                                            {
                                                                              "properties": {
                                                                                "start_number": {
                                                                                  "properties": {
                                                                                    "value": {
                                                                                      "type": "integer"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "end_number": {
                                                                                  "properties": {
                                                                                    "value": {
                                                                                      "type": "integer"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            {
                                                                              "properties": {
                                                                                "start_indefinite_range": {
                                                                                  "properties": {
                                                                                    "value": {
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "comparator": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                        "LTE",
                                                                                        "MTE"
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "end_indefinite_range": {
                                                                                  "properties": {
                                                                                    "value": {
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "comparator": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                        "LTE",
                                                                                        "MTE"
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            },
                                                                            {
                                                                              "properties": {
                                                                                "start_definite_range": {
                                                                                  "properties": {
                                                                                    "min": {
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "max": {
                                                                                      "type": "integer"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "end_definite_range": {
                                                                                  "properties": {
                                                                                    "min": {
                                                                                      "type": "integer"
                                                                                    },
                                                                                    "max": {
                                                                                      "type": "integer"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "sequence_id": {
                                                                          "type": "string",
                                                                          "pattern": "^ga4gh:\\w[^:]*$"
                                                                        }
                                                                      }
                                                                    },
                                                                    "reverse_complement": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "properties": {
                                                                "repeated_sequence_expression": {
                                                                  "properties": {
                                                                    "literal_sequence_expression": {
                                                                      "properties": {
                                                                        "sequence": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    },
                                                                    "derived_sequence_expression": {
                                                                      "properties": {
                                                                        "location": {
                                                                          "properties": {
                                                                            "sequence_interval": {
                                                                              "oneOf": [
                                                                                {
                                                                                  "properties": {
                                                                                    "start_number": {
                                                                                      "properties": {
                                                                                        "value": {
                                                                                          "type": "integer"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "end_number": {
                                                                                      "properties": {
                                                                                        "value": {
                                                                                          "type": "integer"
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "properties": {
                                                                                    "start_indefinite_range": {
                                                                                      "properties": {
                                                                                        "value": {
                                                                                          "type": "integer"
                                                                                        },
                                                                                        "comparator": {
                                                                                          "type": "string",
                                                                                          "enum": [
                                                                                            "LTE",
                                                                                            "MTE"
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "end_indefinite_range": {
                                                                                      "properties": {
                                                                                        "value": {
                                                                                          "type": "integer"
                                                                                        },
                                                                                        "comparator": {
                                                                                          "type": "string",
                                                                                          "enum": [
                                                                                            "LTE",
                                                                                            "MTE"
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "properties": {
                                                                                    "start_definite_range": {
                                                                                      "properties": {
                                                                                        "min": {
                                                                                          "type": "integer"
                                                                                        },
                                                                                        "max": {
                                                                                          "type": "integer"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "end_definite_range": {
                                                                                      "properties": {
                                                                                        "min": {
                                                                                          "type": "integer"
                                                                                        },
                                                                                        "max": {
                                                                                          "type": "integer"
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "sequence_id": {
                                                                              "type": "string",
                                                                              "pattern": "^ga4gh:\\w[^:]*$"
                                                                            }
                                                                          }
                                                                        },
                                                                        "reverse_complement": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    },
                                                                    "number": {
                                                                      "properties": {
                                                                        "value": {
                                                                          "type": "integer"
                                                                        }
                                                                      }
                                                                    },
                                                                    "indefinite_range": {
                                                                      "properties": {
                                                                        "value": {
                                                                          "type": "integer"
                                                                        },
                                                                        "comparator": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                            "LTE",
                                                                            "MTE"
                                                                          ]
                                                                        }
                                                                      }
                                                                    },
                                                                    "definite_range": {
                                                                      "properties": {
                                                                        "min": {
                                                                          "type": "integer"
                                                                        },
                                                                        "max": {
                                                                          "type": "integer"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "properties": {
                                                            "_id": {
                                                              "type": "string",
                                                              "pattern": "^\\w[^:]*:.+$",
                                                              "title": "CURIE-style Identifier",
                                                              "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Allele"
                                                    }
                                                  },
                                                  "required": [
                                                    "type"
                                                  ],
                                                  "title": "Allele"
                                                },
                                                {
                                                  "properties": {
                                                    "curie": {
                                                      "type": "string",
                                                      "pattern": "^\\w[^:]*:.+$",
                                                      "description": "References to Alleles that comprise this Haplotype."
                                                    }
                                                  },
                                                  "title": "Reference"
                                                }
                                              ]
                                            },
                                            "type": "array",
                                            "title": "Alleles (a set of non-overlapping Alleles that co-occur on the same molecule)"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Haplotype",
                                        "description": "List of Alleles, or references to Alleles, that comprise this Haplotype."
                                      }
                                    }
                                  },
                                  {
                                    "properties": {
                                      "text": {
                                        "properties": {
                                          "_id": {
                                            "type": "string",
                                            "pattern": "^\\w[^:]*:.+$",
                                            "title": "CURIE-style Identifier",
                                            "description": "A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax, e.g. ensembl:ENSG00000139618"
                                          },
                                          "definition": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "label": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "gene_context": {
                                "properties": {
                                  "value_id": {
                                    "type": "string",
                                    "title": "Gene Identifier",
                                    "description": "The official gene identifier as designated by the organism gene nomenclature committee e.g. HGNC:3477 or MGI:2385071."
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "title": "Gene Symbol",
                                    "description": "The primary gene symbol. Takes the place of the label field in a generic descriptor."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "A free-text description of this gene context."
                                  },
                                  "alternate_ids": {
                                    "items": {
                                      "type": "string",
                                      "description": "Alternate IDs (should be CURIE) for the same gene context."
                                    },
                                    "type": "array",
                                    "title": "Alternate Identifiers"
                                  },
                                  "alternate_symbols": {
                                    "items": {
                                      "type": "string",
                                      "description": "Alternate symbols (should be CURIE) for the same gene context."
                                    },
                                    "type": "array",
                                    "title": "Alternate Symbols"
                                  },
                                  "xrefs": {
                                    "items": {
                                      "type": "string",
                                      "description": "Related concept IDs (e.g. gene ortholog IDs) may be placed in xrefs."
                                    },
                                    "type": "array",
                                    "title": "External References"
                                  }
                                }
                              },
                              "expressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "syntax": {
                                      "type": "string"
                                    },
                                    "version": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "vcf_record": {
                                "properties": {
                                  "genome_assembly": {
                                    "type": "string"
                                  },
                                  "chrom": {
                                    "type": "string"
                                  },
                                  "pos": {
                                    "type": "integer"
                                  },
                                  "ref": {
                                    "type": "string"
                                  },
                                  "alt": {
                                    "type": "string"
                                  },
                                  "qual": {
                                    "type": "string"
                                  },
                                  "filter": {
                                    "type": "string"
                                  },
                                  "info": {
                                    "type": "string"
                                  }
                                }
                              },
                              "xrefs": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "alternate_labels": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "extensions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "molecule_context": {
                                "oneOf": [
                                  {
                                    "const": "unspecified_molecule_context",
                                    "title": "unspecified_molecule_context"
                                  },
                                  {
                                    "const": "genomic",
                                    "title": "genomic"
                                  },
                                  {
                                    "const": "transcript",
                                    "title": "transcript"
                                  },
                                  {
                                    "const": "protein",
                                    "title": "protein"
                                  }
                                ]
                              },
                              "structural_type": {
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  }
                                }
                              },
                              "vrs_ref_allele_seq": {
                                "type": "string"
                              },
                              "allelic_state": {
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "title": "Variant Interpretation"
                  }
                ],
                "properties": {
                  "subject_or_biosample_id": {
                    "type": "string",
                    "description": "identifier for the subject of the interpretation. This MUST be the individual id or a biosample id of the enclosing phenopacket."
                  },
                  "interpretation_status": {
                    "enum": [
                      "UNKNOWN_STATUS",
                      "REJECTED",
                      "CANDIDATE",
                      "CONTRIBUTORY",
                      "CAUSATIVE"
                    ],
                    "type": "string",
                    "title": "Interpretation Status"
                  },
                  "files": {
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "URI for the file e.g. https://opensnp.org/data/60.23andme-exome-vcf.231?1341012444 or drs://seqslab.net/id",
                        "title": "URI"
                      },
                      "individual_to_file_identifiers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "title": "Individual",
                              "description": "The values must correspond to the Individual::ID for the individuals in the message."
                            },
                            "value": {
                              "type": "string",
                              "title": "File identifier",
                              "description": "The values must map to the samples in the file."
                            }
                          },
                          "required": [
                            "key",
                            "value"
                          ]
                        },
                        "description": "Map of identifiers mapping an individual to a sample in the file. The key values must correspond to the Individual::id for the individuals in the message, the values must map to the samples in the file."
                      },
                      "file_attribute": {
                        "type": "array",
                        "description": "A map of attributes pertaining to the file or its contents.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "genomeAssembly": {
                              "type": "string"
                            },
                            "fileFormat": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false,
          "description": "The diagnosis made in this interpretation"
        }
      }
    },
    "MedicalAction": {
      "oneOf": [
        {
          "properties": {
            "procedure": {
              "properties": {
                "code": {
                  "type": "object",
                  "description": "TODO: A component: OntologyClass should be a choice. clinical procedure performed. REQUIRED.",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    }
                  }
                },
                "body_site": {
                  "type": "array",
                  "description": "TODO: A component: OntologyClass should be a choice. specific body site where the procedure was performed.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      }
                    }
                  }
                },
                "performed": {
                  "type": "array",
                  "description": "TODO: A component: TimeElement. age/time when the procedure was performed.",
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "gestational_age": {
                            "properties": {
                              "weeks": {
                                "type": "integer"
                              },
                              "days": {
                                "type": "integer"
                              }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Gestational Age"
                          }
                        },
                        "title": "Gestational Age"
                      },
                      {
                        "properties": {
                          "age": {
                            "properties": {
                              "iso8601duration": {
                                "type": "string",
                                "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                              }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Age",
                            "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
                          }
                        },
                        "title": "Age"
                      },
                      {
                        "properties": {
                          "age_range": {
                            "properties": {
                              "start": {
                                "properties": {
                                  "iso8601duration": {
                                    "type": "string",
                                    "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                                  }
                                }
                              },
                              "end": {
                                "properties": {
                                  "iso8601duration": {
                                    "type": "string",
                                    "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "title": "Age Range"
                      },
                      {
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "title": "Timestamp"
                      },
                      {
                        "properties": {
                          "interval": {
                            "properties": {
                              "start": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "end": {
                                "type": "string",
                                "format": "date-time"
                              }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Time Interval"
                          }
                        },
                        "title": "Time Interval"
                      }
                    ]
                  }
                }
              },
              "title": "Procedure"
            }
          }
        },
        {
          "properties": {
            "treatment": {
              "properties": {
                "agent": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    }
                  }
                },
                "route_of_administration": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    }
                  }
                },
                "dose_intervals": {
                  "properties": {
                    "quantity": {
                      "properties": {
                        "reference_range": {
                          "properties": {
                            "unit": {
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                }
                              }
                            },
                            "low": {
                              "type": "integer"
                            },
                            "high": {
                              "type": "integer"
                            }
                          }
                        },
                        "value": {
                          "type": "integer"
                        },
                        "unit": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "label": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "schedule_frequency": {
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "label": {
                          "type": "string"
                        }
                      }
                    },
                    "interval": {
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "date"
                        },
                        "end": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    }
                  }
                },
                "drug_type": {
                  "type": "string",
                  "oneOf": [
                    {
                      "const": "UNKNOWN_DRUG_TYPE",
                      "title": "UNKNOWN_DRUG_TYPE"
                    },
                    {
                      "const": "PRESCRIPTION",
                      "title": "PRESCRIPTION"
                    },
                    {
                      "const": "EHR_MEDICATION_LIST",
                      "title": "EHR_MEDICATION_LIST"
                    },
                    {
                      "const": "ADMINISTRATION_RELATED_TO_PROCEDURE",
                      "title": "ADMINISTRATION_RELATED_TO_PROCEDURE"
                    }
                  ]
                },
                "cumulative_dose": {
                  "properties": {
                    "reference_range": {
                      "properties": {
                        "unit": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "label": {
                              "type": "string"
                            }
                          }
                        },
                        "low": {
                          "type": "integer"
                        },
                        "high": {
                          "type": "integer"
                        }
                      }
                    },
                    "value": {
                      "type": "integer"
                    },
                    "unit": {
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "label": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "title": "Treatment"
            }
          }
        },
        {
          "properties": {
            "radiation_therapy": {
              "properties": {
                "modality": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    }
                  }
                },
                "body_site": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    }
                  }
                },
                "dosage": {
                  "type": "integer"
                },
                "fractions": {
                  "type": "integer"
                }
              },
              "title": "RadiationTherapy"
            }
          }
        },
        {
          "properties": {
            "therapeutic_regimen": {
              "oneOf": [
                {
                  "properties": {
                    "ontology_class": {
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "label": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "external_reference": {
                      "properties": {
                        "reference": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "properties": {
                "start_time": {
                  "oneOf": [
                    {
                      "properties": {
                        "gestational_age": {
                          "properties": {
                            "weeks": {
                              "type": "integer"
                            },
                            "days": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "type": "object",
                          "title": "Gestational Age"
                        }
                      },
                      "title": "Gestational Age"
                    },
                    {
                      "properties": {
                        "age": {
                          "properties": {
                            "iso8601duration": {
                              "type": "string",
                              "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                            }
                          },
                          "additionalProperties": false,
                          "type": "object",
                          "title": "Age",
                          "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
                        }
                      },
                      "title": "Age"
                    },
                    {
                      "properties": {
                        "age_range": {
                          "properties": {
                            "start": {
                              "properties": {
                                "iso8601duration": {
                                  "type": "string",
                                  "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                                }
                              }
                            },
                            "end": {
                              "properties": {
                                "iso8601duration": {
                                  "type": "string",
                                  "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                                }
                              }
                            }
                          }
                        }
                      },
                      "title": "Age Range"
                    },
                    {
                      "properties": {
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "title": "Timestamp"
                    },
                    {
                      "properties": {
                        "interval": {
                          "properties": {
                            "start": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "end": {
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "additionalProperties": false,
                          "type": "object",
                          "title": "Time Interval"
                        }
                      },
                      "title": "Time Interval"
                    }
                  ]
                },
                "end_time": {
                  "oneOf": [
                    {
                      "properties": {
                        "gestational_age": {
                          "properties": {
                            "weeks": {
                              "type": "integer"
                            },
                            "days": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "type": "object",
                          "title": "Gestational Age"
                        }
                      },
                      "title": "Gestational Age"
                    },
                    {
                      "properties": {
                        "age": {
                          "properties": {
                            "iso8601duration": {
                              "type": "string",
                              "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                            }
                          },
                          "additionalProperties": false,
                          "type": "object",
                          "title": "Age",
                          "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
                        }
                      },
                      "title": "Age"
                    },
                    {
                      "properties": {
                        "age_range": {
                          "properties": {
                            "start": {
                              "properties": {
                                "iso8601duration": {
                                  "type": "string",
                                  "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                                }
                              }
                            },
                            "end": {
                              "properties": {
                                "iso8601duration": {
                                  "type": "string",
                                  "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                                }
                              }
                            }
                          }
                        }
                      },
                      "title": "Age Range"
                    },
                    {
                      "properties": {
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "title": "Timestamp"
                    },
                    {
                      "properties": {
                        "interval": {
                          "properties": {
                            "start": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "end": {
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "additionalProperties": false,
                          "type": "object",
                          "title": "Time Interval"
                        }
                      },
                      "title": "Time Interval"
                    }
                  ]
                },
                "regimen_status": {
                  "type": "integer",
                  "oneOf": [
                    {
                      "const": 0,
                      "title": "UNKNOWN_STATUS"
                    },
                    {
                      "const": 1,
                      "title": "STARTED"
                    },
                    {
                      "const": 2,
                      "title": "COMPLETED"
                    },
                    {
                      "const": 3,
                      "title": "DISCONTINUED"
                    }
                  ]
                }
              },
              "title": "TherapeuticRegimen"
            }
          }
        }
      ],
      "properties": {
        "treatment_target": {
          "properties": {
            "id": {
              "type": "string"
            },
            "label": {
              "type": "string"
            }
          }
        },
        "treatment_intent": {
          "properties": {
            "id": {
              "type": "string"
            },
            "label": {
              "type": "string"
            }
          }
        },
        "response_to_treatment": {
          "properties": {
            "id": {
              "type": "string"
            },
            "label": {
              "type": "string"
            }
          }
        },
        "adverse_events": {
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            }
          }
        },
        "treatment_termination_reason": {
          "properties": {
            "id": {
              "type": "string"
            },
            "label": {
              "type": "string"
            }
          }
        }
      }
    },
    "PhenotypicFeatures": {
      "properties": {
    "description": {
      "type": "string",
      "description": "Free-text description of the phenotype. Note that this is not an acceptable place to document/describe the phenotype. The type, onset, and other such fields should be used for this purpose."
    },
    "type": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "title": "Phenotype Ontology",
      "description": "The primary ontology class which describes the phenotype. For example, \"HP:0001363\"  \"Craniosynostosis\" FHIR mapping: Condition.identifier"
    },
    "excluded": {
      "type": "boolean",
      "title": "Excluded. Indicate whether or not the phenotype was observed. Default is 'false'; namely, the phenotype was observed."
    },
    "severity": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "title": "Severity Ontology",
      "description": "Severity of the condition (e.g., subclasses of HP:0012824-Severity or SNOMED:272141005-Severities) FHIR mapping: Condition.severity"
    },
    "modifiers": {
      "items": {
        "type": "object",
        "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
      },
      "type": "array",
      "title": "Clinical Modifiers",
      "description": "Subclasses of HP:0012823. Clinical modifier apart from Severity HP:0012824 - Severity"
    },
    "onset": {
      "oneOf": [
        {
          "properties": {
            "gestational_age": {
              "properties": {
                "weeks": {
                  "type": "integer"
                },
                "days": {
                  "type": "integer"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Gestational Age"
            }
          },
          "title": "Gestational Age"
        },
        {
          "properties": {
            "age": {
              "properties": {
                "iso8601duration": {
                  "type": "string",
                  "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Age",
              "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
            }
          },
          "title": "Age"
        },
        {
          "properties": {
            "age_range": {
              "properties": {
                "start": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  }
                },
                "end": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  }
                }
              }
            }
          },
          "title": "Age Range"
        },
        {
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          },
          "title": "Timestamp"
        },
        {
          "properties": {
            "interval": {
              "properties": {
                "start": {
                  "type": "string",
                  "format": "date-time"
                },
                "end": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Time Interval"
            }
          },
          "title": "Time Interval"
        }
      ]
    },
    "resolution": {
      "oneOf": [
        {
          "properties": {
            "gestational_age": {
              "properties": {
                "weeks": {
                  "type": "integer"
                },
                "days": {
                  "type": "integer"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Gestational Age"
            }
          },
          "title": "Gestational Age"
        },
        {
          "properties": {
            "age": {
              "properties": {
                "iso8601duration": {
                  "type": "string",
                  "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Age",
              "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
            }
          },
          "title": "Age"
        },
        {
          "properties": {
            "age_range": {
              "properties": {
                "start": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  }
                },
                "end": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  }
                }
              }
            }
          },
          "title": "Age Range"
        },
        {
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          },
          "title": "Timestamp"
        },
        {
          "properties": {
            "interval": {
              "properties": {
                "start": {
                  "type": "string",
                  "format": "date-time"
                },
                "end": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Time Interval"
            }
          },
          "title": "Time Interval"
        }
      ],
      "additionalProperties": false,
      "description": "Age or time at which the feature resolved or abated."
    },
    "evidence": {
      "items": {
        "type": "object",
        "properties": {
        "evidence_code": {
          "type": "object",
          "description": "TODO: A component: OntologyClass should be a choice. REQUIRED..",
          "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
        },
        "reference": {
          "properties": {
        "reference": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
        }
      }
      },
      "additionalProperties": false,
      "type": "array",
      "description": "Evidences for how the phenotype was determined."
    }
  }
    },
    "Measurement": {
      "properties": {
    "description": {
      "type": "string",
      "description": "Free-text description of the feature. Note this is not a acceptable place to document/describe the phenotype - the type and onset etc. fields should be used for this purpose."
    },
    "assay": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "description": "An ontology class which describes the assay used to produce the measurement. For example \"body temperature\" (CMO:0000015) or \"Platelets [#/volume] in Blood\" (LOINC:26515-7) FHIR mapping: Observation.code"
    },
    "value": {
      "type": "object",
      "oneOf": [
        {
          "title": "OntologyClass",
          "properties": {
            "ontology_class": {
              "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
            }
          }
        },
        {
          "title": "Quantity",
          "properties": {
            "quantity": {
              "properties": {
        "unit": {
          "type": "object",
          "description": "The kind of unit. REQUIRED.",
          "properties": {
            "id": {
              "type": "string"
            },
            "label": {
              "type": "string"
            }
          }
        },
        "reference_range": {
          "properties": {
            "unit": {
              "type": "object",
              "description": "The kind of unit. REQUIRED.",
              "properties": {
                "id": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                }
              }
            },
            "low": {
              "description": "lower range of normal. REQUIRED.",
              "type": "integer"
            },
            "high": {
              "description": "upper range of normal. REQUIRED.",
              "type": "integer"
            }
          },
          "description": "the normal range for the value",
          "required": [
            "unit",
            "low",
            "high"
          ]
        },
        "value": {
          "type": "integer",
          "description": "the value of the quantity in the units e.g. 2.0 mg. REQUIRED"
        }
      }
            }
          }
        }
      ]
    },
    "complex_value": {
      "type": "object",
      "properties": {
        "typed_quantities": {
          "type": "array",
          "items": {
            "properties": {
              "type": {
                "type": "object",
                "description": "OntologyClass to describe the type of the measurement. REQUIRED..",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  }
                }
              },
              "quantity": {
                "type": "object",
                "properties": {
                  "unit": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      }
                    }
                  },
                  "reference_range": {
                    "properties": {
                      "unit": {
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          }
                        }
                      },
                      "low": {
                        "description": "lower range of normal. REQUIRED.",
                        "type": "integer"
                      },
                      "high": {
                        "description": "upper range of normal. REQUIRED.",
                        "type": "integer"
                      }
                    },
                    "description": "the normal range for the value",
                    "required": [
                      "unit",
                      "low",
                      "high"
                    ]
                  },
                  "value": {
                    "type": "integer",
                    "description": "the value of the quantity in the units e.g. 2.0 mg. REQUIRED"
                  }
                }
              }
            }
          }
        }
      }
    },
    "time_observed": {
      "oneOf": [
        {
          "properties": {
            "gestational_age": {
              "properties": {
                "weeks": {
                  "type": "integer"
                },
                "days": {
                  "type": "integer"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Gestational Age"
            }
          },
          "title": "Gestational Age"
        },
        {
          "properties": {
            "age": {
              "properties": {
                "iso8601duration": {
                  "type": "string",
                  "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Age",
              "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
            }
          },
          "title": "Age"
        },
        {
          "properties": {
            "age_range": {
              "properties": {
                "start": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  }
                },
                "end": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  }
                }
              }
            }
          },
          "title": "Age Range"
        },
        {
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          },
          "title": "Timestamp"
        },
        {
          "properties": {
            "interval": {
              "properties": {
                "start": {
                  "type": "string",
                  "format": "date-time"
                },
                "end": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Time Interval"
            }
          },
          "title": "Time Interval"
        }
      ],
      "description": "The time at which the measurement was made"
    },
    "procedure": {
      "properties": {
                "code": {
                  "type": "object",
                  "description": "TODO: A component: OntologyClass should be a choice. clinical procedure performed. REQUIRED.",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    }
                  }
                },
                "body_site": {
                  "type": "array",
                  "description": "TODO: A component: OntologyClass should be a choice. specific body site where the procedure was performed.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      }
                    }
                  }
                },
                "performed": {
                  "type": "array",
                  "description": "TODO: A component: TimeElement. age/time when the procedure was performed.",
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "gestational_age": {
                            "properties": {
                              "weeks": {
                                "type": "integer"
                              },
                              "days": {
                                "type": "integer"
                              }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Gestational Age"
                          }
                        },
                        "title": "Gestational Age"
                      },
                      {
                        "properties": {
                          "age": {
                            "properties": {
                              "iso8601duration": {
                                "type": "string",
                                "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                              }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Age",
                            "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
                          }
                        },
                        "title": "Age"
                      },
                      {
                        "properties": {
                          "age_range": {
                            "properties": {
                              "start": {
                                "properties": {
                                  "iso8601duration": {
                                    "type": "string",
                                    "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                                  }
                                }
                              },
                              "end": {
                                "properties": {
                                  "iso8601duration": {
                                    "type": "string",
                                    "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "title": "Age Range"
                      },
                      {
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "title": "Timestamp"
                      },
                      {
                        "properties": {
                          "interval": {
                            "properties": {
                              "start": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "end": {
                                "type": "string",
                                "format": "date-time"
                              }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Time Interval"
                          }
                        },
                        "title": "Time Interval"
                      }
                    ]
                  }
                }
              },
      "description": "Clinical procedure performed on the subject in order to produce the measurement."
    }
  }
    },
    "Biosample": {
      "properties": {
    "id": {
      "type": "string",
      "description": "The Biosample id This is unique in the context of the server instance. ARGO mapping specimen::submitter_specimen_id"
    },
    "individual_id": {
      "type": "string",
      "description": "The id of the individual this biosample was derived from. ARGO mapping specimen::submitter_donor_id"
    },
    "derived_from_id": {
      "type": "string",
      "description": "The id of the parent biosample this biosample was derived from."
    },
    "description": {
      "type": "string",
      "description": "The biosample's description. This attribute contains human readable text. The \"description\" attributes should not contain any structured data."
    },
    "sampled_tissue": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "title": "Sampled Tissue Ontology"
    },
    "sample_type": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "title": "Sample Type Ontology"
    },
    "phenotypic_features": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
    "description": {
      "type": "string",
      "description": "Free-text description of the phenotype. Note that this is not an acceptable place to document/describe the phenotype. The type, onset, and other such fields should be used for this purpose."
    },
    "type": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "title": "Phenotype Ontology",
      "description": "The primary ontology class which describes the phenotype. For example, \"HP:0001363\"  \"Craniosynostosis\" FHIR mapping: Condition.identifier"
    },
    "excluded": {
      "type": "boolean",
      "title": "Excluded. Indicate whether or not the phenotype was observed. Default is 'false'; namely, the phenotype was observed."
    },
    "severity": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "title": "Severity Ontology",
      "description": "Severity of the condition (e.g., subclasses of HP:0012824-Severity or SNOMED:272141005-Severities) FHIR mapping: Condition.severity"
    },
    "modifiers": {
      "items": {
        "type": "object",
        "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
      },
      "type": "array",
      "title": "Clinical Modifiers",
      "description": "Subclasses of HP:0012823. Clinical modifier apart from Severity HP:0012824 - Severity"
    },
    "onset": {
      "oneOf": [
        {
          "properties": {
            "gestational_age": {
              "properties": {
                "weeks": {
                  "type": "integer"
                },
                "days": {
                  "type": "integer"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Gestational Age"
            }
          },
          "title": "Gestational Age"
        },
        {
          "properties": {
            "age": {
              "properties": {
                "iso8601duration": {
                  "type": "string",
                  "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Age",
              "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
            }
          },
          "title": "Age"
        },
        {
          "properties": {
            "age_range": {
              "properties": {
                "start": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  }
                },
                "end": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  }
                }
              }
            }
          },
          "title": "Age Range"
        },
        {
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          },
          "title": "Timestamp"
        },
        {
          "properties": {
            "interval": {
              "properties": {
                "start": {
                  "type": "string",
                  "format": "date-time"
                },
                "end": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Time Interval"
            }
          },
          "title": "Time Interval"
        }
      ]
    },
    "resolution": {
      "oneOf": [
        {
          "properties": {
            "gestational_age": {
              "properties": {
                "weeks": {
                  "type": "integer"
                },
                "days": {
                  "type": "integer"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Gestational Age"
            }
          },
          "title": "Gestational Age"
        },
        {
          "properties": {
            "age": {
              "properties": {
                "iso8601duration": {
                  "type": "string",
                  "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Age",
              "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
            }
          },
          "title": "Age"
        },
        {
          "properties": {
            "age_range": {
              "properties": {
                "start": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  }
                },
                "end": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  }
                }
              }
            }
          },
          "title": "Age Range"
        },
        {
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          },
          "title": "Timestamp"
        },
        {
          "properties": {
            "interval": {
              "properties": {
                "start": {
                  "type": "string",
                  "format": "date-time"
                },
                "end": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Time Interval"
            }
          },
          "title": "Time Interval"
        }
      ],
      "additionalProperties": false,
      "description": "Age or time at which the feature resolved or abated."
    },
    "evidence": {
      "items": {
        "type": "object",
        "properties": {
        "evidence_code": {
          "type": "object",
          "description": "TODO: A component: OntologyClass should be a choice. REQUIRED..",
          "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
        },
        "reference": {
          "properties": {
        "reference": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
        }
      }
      },
      "additionalProperties": false,
      "type": "array",
      "description": "Evidences for how the phenotype was determined."
    }
  }
      }
    },
    "measurements": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
    "description": {
      "type": "string",
      "description": "Free-text description of the feature. Note this is not a acceptable place to document/describe the phenotype - the type and onset etc. fields should be used for this purpose."
    },
    "assay": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "description": "An ontology class which describes the assay used to produce the measurement. For example \"body temperature\" (CMO:0000015) or \"Platelets [#/volume] in Blood\" (LOINC:26515-7) FHIR mapping: Observation.code"
    },
    "value": {
      "type": "object",
      "oneOf": [
        {
          "title": "OntologyClass",
          "properties": {
            "ontology_class": {
              "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
            }
          }
        },
        {
          "title": "Quantity",
          "properties": {
            "quantity": {
              "properties": {
        "unit": {
          "type": "object",
          "description": "The kind of unit. REQUIRED.",
          "properties": {
            "id": {
              "type": "string"
            },
            "label": {
              "type": "string"
            }
          }
        },
        "reference_range": {
          "properties": {
            "unit": {
              "type": "object",
              "description": "The kind of unit. REQUIRED.",
              "properties": {
                "id": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                }
              }
            },
            "low": {
              "description": "lower range of normal. REQUIRED.",
              "type": "integer"
            },
            "high": {
              "description": "upper range of normal. REQUIRED.",
              "type": "integer"
            }
          },
          "description": "the normal range for the value",
          "required": [
            "unit",
            "low",
            "high"
          ]
        },
        "value": {
          "type": "integer",
          "description": "the value of the quantity in the units e.g. 2.0 mg. REQUIRED"
        }
      }
            }
          }
        }
      ]
    },
    "complex_value": {
      "type": "object",
      "properties": {
        "typed_quantities": {
          "type": "array",
          "items": {
            "properties": {
              "type": {
                "type": "object",
                "description": "OntologyClass to describe the type of the measurement. REQUIRED..",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  }
                }
              },
              "quantity": {
                "type": "object",
                "properties": {
                  "unit": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      }
                    }
                  },
                  "reference_range": {
                    "properties": {
                      "unit": {
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          }
                        }
                      },
                      "low": {
                        "description": "lower range of normal. REQUIRED.",
                        "type": "integer"
                      },
                      "high": {
                        "description": "upper range of normal. REQUIRED.",
                        "type": "integer"
                      }
                    },
                    "description": "the normal range for the value",
                    "required": [
                      "unit",
                      "low",
                      "high"
                    ]
                  },
                  "value": {
                    "type": "integer",
                    "description": "the value of the quantity in the units e.g. 2.0 mg. REQUIRED"
                  }
                }
              }
            }
          }
        }
      }
    },
    "time_observed": {
      "oneOf": [
        {
          "properties": {
            "gestational_age": {
              "properties": {
                "weeks": {
                  "type": "integer"
                },
                "days": {
                  "type": "integer"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Gestational Age"
            }
          },
          "title": "Gestational Age"
        },
        {
          "properties": {
            "age": {
              "properties": {
                "iso8601duration": {
                  "type": "string",
                  "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Age",
              "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
            }
          },
          "title": "Age"
        },
        {
          "properties": {
            "age_range": {
              "properties": {
                "start": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  }
                },
                "end": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  }
                }
              }
            }
          },
          "title": "Age Range"
        },
        {
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          },
          "title": "Timestamp"
        },
        {
          "properties": {
            "interval": {
              "properties": {
                "start": {
                  "type": "string",
                  "format": "date-time"
                },
                "end": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Time Interval"
            }
          },
          "title": "Time Interval"
        }
      ],
      "description": "The time at which the measurement was made"
    },
    "procedure": {
      "properties": {
                "code": {
                  "type": "object",
                  "description": "TODO: A component: OntologyClass should be a choice. clinical procedure performed. REQUIRED.",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    }
                  }
                },
                "body_site": {
                  "type": "array",
                  "description": "TODO: A component: OntologyClass should be a choice. specific body site where the procedure was performed.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      }
                    }
                  }
                },
                "performed": {
                  "type": "array",
                  "description": "TODO: A component: TimeElement. age/time when the procedure was performed.",
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "gestational_age": {
                            "properties": {
                              "weeks": {
                                "type": "integer"
                              },
                              "days": {
                                "type": "integer"
                              }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Gestational Age"
                          }
                        },
                        "title": "Gestational Age"
                      },
                      {
                        "properties": {
                          "age": {
                            "properties": {
                              "iso8601duration": {
                                "type": "string",
                                "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                              }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Age",
                            "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
                          }
                        },
                        "title": "Age"
                      },
                      {
                        "properties": {
                          "age_range": {
                            "properties": {
                              "start": {
                                "properties": {
                                  "iso8601duration": {
                                    "type": "string",
                                    "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                                  }
                                }
                              },
                              "end": {
                                "properties": {
                                  "iso8601duration": {
                                    "type": "string",
                                    "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "title": "Age Range"
                      },
                      {
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "title": "Timestamp"
                      },
                      {
                        "properties": {
                          "interval": {
                            "properties": {
                              "start": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "end": {
                                "type": "string",
                                "format": "date-time"
                              }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Time Interval"
                          }
                        },
                        "title": "Time Interval"
                      }
                    ]
                  }
                }
              },
      "description": "Clinical procedure performed on the subject in order to produce the measurement."
    }
  }
      }
    },
    "taxonomy": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "title": "Taxonomy Ontology"
    },
    "time_of_collection": {
      "oneOf": [
        {
          "properties": {
            "gestational_age": {
              "properties": {
                "weeks": {
                  "type": "integer"
                },
                "days": {
                  "type": "integer"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Gestational Age"
            }
          },
          "title": "Gestational Age"
        },
        {
          "properties": {
            "age": {
              "properties": {
                "iso8601duration": {
                  "type": "string",
                  "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Age",
              "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
            }
          },
          "title": "Age"
        },
        {
          "properties": {
            "age_range": {
              "properties": {
                "start": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  }
                },
                "end": {
                  "properties": {
                    "iso8601duration": {
                      "type": "string",
                      "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                    }
                  }
                }
              }
            }
          },
          "title": "Age Range"
        },
        {
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          },
          "title": "Timestamp"
        },
        {
          "properties": {
            "interval": {
              "properties": {
                "start": {
                  "type": "string",
                  "format": "date-time"
                },
                "end": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Time Interval"
            }
          },
          "title": "Time Interval"
        }
      ],
      "additionalProperties": false,
      "description": "An TimeElement describing either the age of the individual this biosample was derived from at the time of collection, or the time itself.See http://build.fhir.org/datatypes"
    },
    "histological_diagnosis": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "title": "Histological Diagnosis Ontology"
    },
    "tumor_progression": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "title": "Tumor Progression Ontology"
    },
    "tumor_grade": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "title": "Tumor Grade Ontology"
    },
    "pathological_stage": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "title": "Pathological Stage Ontology"
    },
    "pathological_tnm_finding": {
      "items": {
        "type": "object",
        "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
      }
    },
    "diagnostic_markers": {
      "items": {
        "type": "object",
        "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
      }
    },
    "procedure": {
      "properties": {
                "code": {
                  "type": "object",
                  "description": "TODO: A component: OntologyClass should be a choice. clinical procedure performed. REQUIRED.",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    }
                  }
                },
                "body_site": {
                  "type": "array",
                  "description": "TODO: A component: OntologyClass should be a choice. specific body site where the procedure was performed.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      }
                    }
                  }
                },
                "performed": {
                  "type": "array",
                  "description": "TODO: A component: TimeElement. age/time when the procedure was performed.",
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "gestational_age": {
                            "properties": {
                              "weeks": {
                                "type": "integer"
                              },
                              "days": {
                                "type": "integer"
                              }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Gestational Age"
                          }
                        },
                        "title": "Gestational Age"
                      },
                      {
                        "properties": {
                          "age": {
                            "properties": {
                              "iso8601duration": {
                                "type": "string",
                                "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                              }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Age",
                            "description": "See http://build.fhir.org/datatypes and http://build.fhir.org/condition-definitions.html#Condition.onset_x_. In FHIR, this is represented as a UCUM measurement - http://unitsofmeasure.org/trac/."
                          }
                        },
                        "title": "Age"
                      },
                      {
                        "properties": {
                          "age_range": {
                            "properties": {
                              "start": {
                                "properties": {
                                  "iso8601duration": {
                                    "type": "string",
                                    "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                                  }
                                }
                              },
                              "end": {
                                "properties": {
                                  "iso8601duration": {
                                    "type": "string",
                                    "description": "The age of this individual as ISO8601 duration or time intervals (e.g., P40Y10M05D)."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "title": "Age Range"
                      },
                      {
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "title": "Timestamp"
                      },
                      {
                        "properties": {
                          "interval": {
                            "properties": {
                              "start": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "end": {
                                "type": "string",
                                "format": "date-time"
                              }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Time Interval"
                          }
                        },
                        "title": "Time Interval"
                      }
                    ]
                  }
                }
              },
      "description": "Clinical procedure performed on the subject in order to extract the biosample. ARGO mapping specimen::specimen_anatomic_location - Procedure::body_site ARGO mapping specimen::specimen_acquisition_interval - Procedure::time_performed"
    },
    "files": {
      "items": {
        "type": "object",
        "properties": {
        "uri": {
          "type": "string",
          "description": "URI for the file e.g. https://opensnp.org/data/60.23andme-exome-vcf.231?1341012444 or drs://seqslab.net/id",
          "title": "URI"
        },
        "individual_to_file_identifiers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "title": "Individual",
                "description": "The values must correspond to the Individual::ID for the individuals in the message."
              },
              "value": {
                "type": "string",
                "title": "File identifier",
                "description": "The values must map to the samples in the file."
              }
            },
            "required": [
              "key",
              "value"
            ]
          },
          "description": "Map of identifiers mapping an individual to a sample in the file. The key values must correspond to the Individual::id for the individuals in the message, the values must map to the samples in the file."
        },
        "file_attribute": {
          "type": "array",
          "description": "A map of attributes pertaining to the file or its contents.",
          "items": {
            "type": "object",
            "properties": {
              "genomeAssembly": {
                "type": "string"
              },
              "fileFormat": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          }
        }
      }
      }
    },
    "material_sample": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "title": "Material Sample Ontology"
    },
    "sample_processing": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "title": "Sample Processing Ontology"
    },
    "sample_storage": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "title": "Sample Storage Ontology"
    }
  }
    }
  }
}